{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1657337189615,
      "contentHash": "a24c6682dfdd459618422202d7b97fec",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1657337189616,
      "contentHash": "adda574ef53cb30afda008ea43fbb506",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/world-id-contracts/lib/ds-test/src/test.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Test.sol/Test.json"
        },
        "stdError": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Test.sol/stdError.json"
        },
        "stdMath": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Test.sol/stdMath.json"
        },
        "stdStorage": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Test.sol/stdStorage.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1657337189616,
      "contentHash": "518663349da38fd074c8f60cb1e29325",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.0",
      "artifacts": {
        "Vm": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Vm.sol/Vm.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1657337189617,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1657337189617,
      "contentHash": "5df91f8e93efbfcccf68973dc1b74a70",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/vm.sol": {
      "lastModificationDate": 1657337189616,
      "contentHash": "518663349da38fd074c8f60cb1e29325",
      "sourceName": "lib/forge-std/src/vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.0",
      "artifacts": {
        "Vm": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "vm.sol/Vm.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1657337863068,
      "contentHash": "e436cea06129be2c73cda4b1acc848b5",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
      "lastModificationDate": 1657337863100,
      "contentHash": "92f9448b23a90ea3bb932ee55cc3ccce",
      "sourceName": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuard": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ReentrancyGuard.sol/ReentrancyGuard.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1657337863103,
      "contentHash": "92cc1aad41bdb18ca20f6e03f461de7d",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ERC20.sol/ERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1657337863103,
      "contentHash": "ad7c2d0af148c8f9f097d65deeb4da6b",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1657337863106,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IERC20Metadata.sol/IERC20Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1657337863116,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
      "lastModificationDate": 1657337863116,
      "contentHash": "74654e3ae5d7f39555055dfe244dab7a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Counters": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Counters.sol/Counters.json"
        }
      }
    },
    "lib/world-id-contracts/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1659242669889,
      "contentHash": "5d45a46528eaf8a26f0a8d93669f3148",
      "sourceName": "lib/world-id-contracts/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.23",
      "artifacts": {
        "DSTest": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreConstants.sol": {
      "lastModificationDate": 1659242673755,
      "contentHash": "a0d7c2216d3f6070865fe37cdf00a531",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreConstants.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "SemaphoreConstants": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "SemaphoreConstants.sol/SemaphoreConstants.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreCore.sol": {
      "lastModificationDate": 1659242673755,
      "contentHash": "be5664f8a04b06841bc193a29d45faa7",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreCore.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreCore.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/IVerifier.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "SemaphoreCore": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "SemaphoreCore.sol/SemaphoreCore.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreGroups.sol": {
      "lastModificationDate": 1659242673774,
      "contentHash": "816fcea500ed841a07c56c1018de74e8",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreGroups.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreConstants.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "SemaphoreGroups": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "SemaphoreGroups.sol/SemaphoreGroups.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/base/Verifier.sol": {
      "lastModificationDate": 1659242673774,
      "contentHash": "d0f5bd982f9e813a765321c1011fabc2",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/base/Verifier.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "Pairing": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Verifier.sol/Pairing.json"
        },
        "Verifier": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Verifier.sol/Verifier.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreCore.sol": {
      "lastModificationDate": 1659242673795,
      "contentHash": "8220350a4343ee276244ef335ad85260",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreCore.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ISemaphoreCore": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ISemaphoreCore.sol/ISemaphoreCore.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol": {
      "lastModificationDate": 1659242673795,
      "contentHash": "a89c68aab19df4472ecccc2bdc93060a",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ISemaphoreGroups": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ISemaphoreGroups.sol/ISemaphoreGroups.json"
        }
      }
    },
    "lib/world-id-contracts/lib/semaphore/contracts/interfaces/IVerifier.sol": {
      "lastModificationDate": 1659242673814,
      "contentHash": "d19cffa11a10352f6cfd060c2a4df730",
      "sourceName": "lib/world-id-contracts/lib/semaphore/contracts/interfaces/IVerifier.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IVerifier": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IVerifier.sol/IVerifier.json"
        }
      }
    },
    "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol": {
      "lastModificationDate": 1659242676314,
      "contentHash": "fd04704145cf2784b81cec317a522243",
      "sourceName": "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "PoseidonT3": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Hashes.sol/PoseidonT3.json"
        },
        "PoseidonT6": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Hashes.sol/PoseidonT6.json"
        }
      }
    },
    "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol": {
      "lastModificationDate": 1659242676315,
      "contentHash": "44077320a7b6328409b0e9d645f18de9",
      "sourceName": "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IncrementalBinaryTree": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IncrementalBinaryTree.sol/IncrementalBinaryTree.json"
        }
      }
    },
    "lib/world-id-contracts/src/Semaphore.sol": {
      "lastModificationDate": 1659242642356,
      "contentHash": "03401359ba8e1f636915bc828e9578e4",
      "sourceName": "lib/world-id-contracts/src/Semaphore.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreConstants.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreCore.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreGroups.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/Verifier.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreCore.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/IVerifier.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol",
        "lib/world-id-contracts/src/interfaces/IWorldID.sol"
      ],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "Semaphore": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Semaphore.sol/Semaphore.json"
        }
      }
    },
    "lib/world-id-contracts/src/interfaces/IWorldID.sol": {
      "lastModificationDate": 1659242642365,
      "contentHash": "20dc6e3d2d3422391000d0ffc1eede2f",
      "sourceName": "lib/world-id-contracts/src/interfaces/IWorldID.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "IWorldID": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IWorldID.sol/IWorldID.json"
        }
      }
    },
    "script/Contract.s.sol": {
      "lastModificationDate": 1657337189419,
      "contentHash": "3642d05d9c479368231825c40aaa276a",
      "sourceName": "script/Contract.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "ContractScript": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Contract.s.sol/ContractScript.json"
        }
      }
    },
    "script/HelperConfig.sol": {
      "lastModificationDate": 1657425373441,
      "contentHash": "ed28aea8a5e19e11f21337525461cec5",
      "sourceName": "script/HelperConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.7",
      "artifacts": {
        "HelperConfig": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "HelperConfig.sol/HelperConfig.json"
        }
      }
    },
    "script/MediciPool.s.sol": {
      "lastModificationDate": 1659236427561,
      "contentHash": "2a49d40d2f00a55a1a43612b63c31e4a",
      "sourceName": "script/MediciPool.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "script/HelperConfig.sol",
        "src/MediciPool.sol",
        "src/MediciToken.sol",
        "src/Personhood.sol",
        "src/helpers/ByteHasher.sol",
        "src/helpers/Math.sol",
        "src/interfaces/IWorldID.sol"
      ],
      "versionRequirement": "^0.8.7",
      "artifacts": {
        "DeployMediciPool": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "MediciPool.s.sol/DeployMediciPool.json"
        }
      }
    },
    "src/MediciPool.sol": {
      "lastModificationDate": 1659242889306,
      "contentHash": "6fa753f646e193077eb2cd0d1545f614",
      "sourceName": "src/MediciPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "src/MediciToken.sol",
        "src/Personhood.sol",
        "src/helpers/ByteHasher.sol",
        "src/helpers/Math.sol",
        "src/interfaces/IWorldID.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "MediciPool": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "MediciPool.sol/MediciPool.json"
        }
      }
    },
    "src/MediciToken.sol": {
      "lastModificationDate": 1659242919166,
      "contentHash": "ebd17f07e8f95f791fa68d64647c630b",
      "sourceName": "src/MediciToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "MediciToken": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "MediciToken.sol/MediciToken.json"
        }
      }
    },
    "src/Personhood.sol": {
      "lastModificationDate": 1659000021091,
      "contentHash": "6fe57583c2ff8ab8a01200a13f5779d0",
      "sourceName": "src/Personhood.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "src/helpers/ByteHasher.sol",
        "src/interfaces/IWorldID.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "Personhood": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Personhood.sol/Personhood.json"
        }
      }
    },
    "src/helpers/ByteHasher.sol": {
      "lastModificationDate": 1658783361906,
      "contentHash": "0af7f114be1dae1c0f019305a366e158",
      "sourceName": "src/helpers/ByteHasher.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "ByteHasher": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ByteHasher.sol/ByteHasher.json"
        }
      }
    },
    "src/helpers/ERC20Mintable.sol": {
      "lastModificationDate": 1659242930888,
      "contentHash": "e4ec8dabbc66c0d10648abfc4e4bd46a",
      "sourceName": "src/helpers/ERC20Mintable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.15",
      "artifacts": {
        "ERC20Mintable": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "ERC20Mintable.sol/ERC20Mintable.json"
        }
      }
    },
    "src/helpers/Math.sol": {
      "lastModificationDate": 1657337988094,
      "contentHash": "1496cbad9de5e1cb7e6033141ee2ea93",
      "sourceName": "src/helpers/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "Math": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "src/interfaces/IWorldID.sol": {
      "lastModificationDate": 1658783387289,
      "contentHash": "20dc6e3d2d3422391000d0ffc1eede2f",
      "sourceName": "src/interfaces/IWorldID.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "IWorldID": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "IWorldID.sol/IWorldID.json"
        }
      }
    },
    "test/Contract.t.sol": {
      "lastModificationDate": 1657430029875,
      "contentHash": "848ba83feec29a2e4d286c118102ae20",
      "sourceName": "test/Contract.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/world-id-contracts/lib/ds-test/src/test.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "ContractTest": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "Contract.t.sol/ContractTest.json"
        }
      }
    },
    "test/MediciPool.t.sol": {
      "lastModificationDate": 1659242806608,
      "contentHash": "66287454e37f51c810d72aadb360988e",
      "sourceName": "test/MediciPool.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/vm.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/world-id-contracts/lib/ds-test/src/test.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreConstants.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreCore.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/SemaphoreGroups.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/base/Verifier.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreCore.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/ISemaphoreGroups.sol",
        "lib/world-id-contracts/lib/semaphore/contracts/interfaces/IVerifier.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/Hashes.sol",
        "lib/world-id-contracts/lib/zk-kit/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol",
        "lib/world-id-contracts/src/Semaphore.sol",
        "lib/world-id-contracts/src/interfaces/IWorldID.sol",
        "src/MediciPool.sol",
        "src/MediciToken.sol",
        "src/Personhood.sol",
        "src/helpers/ByteHasher.sol",
        "src/helpers/ERC20Mintable.sol",
        "src/helpers/Math.sol",
        "src/interfaces/IWorldID.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "MediciPoolTest": {
          "0.8.15+commit.e14f2714.Darwin.appleclang": "MediciPool.t.sol/MediciPoolTest.json"
        }
      }
    }
  }
}