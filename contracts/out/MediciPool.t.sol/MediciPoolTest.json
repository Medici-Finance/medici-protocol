{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506179d6806100316000396000f3fe60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c80639a8325a0116200010d578063d37fadb711620000a3578063e9a79a7b116200007a578063e9a79a7b14620003b7578063f19db19314620003ce578063f8ccbf4714620003d8578063fa7626d414620003ec57600080fd5b8063d37fadb7146200038c578063d509b16c1462000396578063d82555f114620003a057600080fd5b8063b9c071b411620000e4578063b9c071b4146200032c578063ba414fa61462000343578063c88a5e6d146200035e578063d06d8229146200037557600080fd5b80639a8325a014620002f4578063af9bbe5f146200030b578063b8a05374146200032257600080fd5b80632d6c17a311620001835780636bce989b116200015a5780636bce989b14620002a55780636f59707514620002bc5780637f924c4e14620002d357806397754ae914620002dd57600080fd5b80632d6c17a314620002605780633a76846314620002775780633bf82db1146200028e57600080fd5b80630a9254e414620001d1578063108554f214620001dd5780631aeb10a614620001f4578063233240ee14620001fe57806329a9e300146200021557806329ce9dde146200022c575b600080fd5b620001db620003fa565b005b620001db620001ee3660046200384d565b620006b3565b620001db6200078c565b620001db6200020f3660046200387c565b62000bec565b620001db62000226366004620038a3565b62000cc1565b620002436200023d366004620039bc565b62000d73565b6040516001600160a01b0390911681526020015b60405180910390f35b620001db6200027136600462003a3c565b62000ea3565b620002436000805160206200796183398151915281565b620001db6200029f36600462003a56565b62000ee3565b620001db620002b636600462003a56565b62000fc5565b620001db620002cd3660046200387c565b62000fd9565b620001db62001083565b620001db620002ee36600462003aab565b62001189565b620002436200030536600462003b05565b620013ca565b620001db6200031c36600462003a56565b620014cc565b620001db6200157a565b620001db6200033d36600462003a3c565b6200175c565b6200034d6200177d565b604051901515815260200162000257565b620001db6200036f3660046200384d565b620018ae565b620001db62000386366004620038a3565b620018e4565b620001db62001996565b620001db62001a95565b620001db620003b136600462003a56565b62001d1d565b620001db620003c83660046200384d565b62001e14565b620001db62001eba565b6000546200034d9062010000900460ff1681565b6000546200034d9060ff1681565b6040516200040890620037d8565b604051809103906000f08015801562000425573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169190911790556040516200045490620037e6565b6200045f9062003b46565b604051809103906000f0801580156200047c573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691821790556040516340c10f1960e01b81526340c10f1990620004ca903090683635c9adc5dea000009060040162003b8f565b600060405180830381600087803b158015620004e557600080fd5b505af1158015620004fa573d6000803e3d6000fd5b5050600a546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506200053c90600190683635c9adc5dea000009060040162003b8f565b600060405180830381600087803b1580156200055757600080fd5b505af11580156200056c573d6000803e3d6000fd5b50506009546040516001600160a01b0390911692506200058d9150620037f4565b6001600160a01b039091168152602001604051809103906000f080158015620005ba573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03928316908117909155600a5460405163aaf5bfc360e01b8152921660048301529063aaf5bfc390602401600060405180830381600087803b1580156200061657600080fd5b505af11580156200062b573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200066a92909116906000199060040162003b8f565b6020604051808303816000875af11580156200068a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006b0919062003ba8565b50565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d90620006e9908590859060040162003b8f565b600060405180830381600087803b1580156200070457600080fd5b505af115801562000719573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200796183398151915292506306447d5691506024015b600060405180830381600087803b1580156200076f57600080fd5b505af115801562000784573d6000803e3d6000fd5b505050505050565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620007db57600080fd5b505af1158015620007f0573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562000842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000868919062003bc8565b9350935050506200088382683635c9adc5dea000006200231b565b620008908160006200231b565b60405163ca669fa760e01b815260016004820152600080516020620079618339815191529063ca669fa790602401600060405180830381600087803b158015620008d957600080fd5b505af1158015620008ee573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b1580156200094057600080fd5b505af115801562000955573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b158015620009a057600080fd5b505af1158015620009b5573d6000803e3d6000fd5b5050600854604051631c3d878d60e31b815260016004820152600093508392506001600160a01b039091169063e1ec3c6890602401608060405180830381865afa15801562000a08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a2e919062003bff565b93509350505062000a40823062002412565b62000a4c81426200231b565b600854604051632fd7543160e21b8152600160048201526000916001600160a01b03169063bf5d50c490602401606060405180830381865afa15801562000a97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000abd919062003c4d565b5091505062000ad581678ac7230489e800006200231b565b6008546040516331c4efe360e21b815262000b5a916001600160a01b03169063c713bf8c9062000b0e9060019060009060040162003b8f565b602060405180830381865afa15801562000b2c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b52919062003c7c565b60016200231b565b600854604051630a14439160e01b81523060048201526001600160a01b0390911690630a14439190602401608060405180830381865afa15801562000ba3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bc9919062003bc8565b965062000be59250869150678ac7230489e8000090506200231b565b5050505050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000c26908490600160801b9060040162003b8f565b600060405180830381600087803b15801562000c4157600080fd5b505af115801562000c56573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007961833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000cac57600080fd5b505af115801562000be5573d6000803e3d6000fd5b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000cfb908590600160801b9060040162003b8f565b600060405180830381600087803b15801562000d1657600080fd5b505af115801562000d2b573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200796183398151915292506347e50cce915060440162000754565b604051638d1cc92560e01b815260009081906000805160206200796183398151915290638d1cc9259062000dac90879060040162003cc9565b6000604051808303816000875af115801562000dcc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000df6919081019062003cfe565b8360405160200162000e0a92919062003d7e565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000e9c5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206200796183398151915263e5d6bf0262000ec4834262003dc7565b6040518263ffffffff1660e01b815260040162000c9191815260200190565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000f19908690859060040162003b8f565b600060405180830381600087803b15801562000f3457600080fd5b505af115801562000f49573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200796183398151915292506345b5607891506044015b600060405180830381600087803b15801562000fa757600080fd5b505af115801562000fbc573d6000803e3d6000fd5b50505050505050565b62000fd4838383600062001189565b505050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001013908490600160801b9060040162003b8f565b600060405180830381600087803b1580156200102e57600080fd5b505af115801562001043573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200796183398151915292506306447d56915060240162000c91565b60085460405163b6b55f2560e01b8152670de0b6b3a764000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620010d157600080fd5b505af1158015620010e6573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562001138573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200115e919062003bc8565b9350505091506200117882670de0b6b3a76400006200231b565b620011858160006200231b565b5050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620011df9162003de1565b6000604051808303816000865af19150503d80600081146200121e576040519150601f19603f3d011682016040523d82523d6000602084013e62001223565b606091505b509150506000818060200190518101906200123f919062003c7c565b9050620012b184620012aa87620012816370a0823160e01b6200126460018d6200250c565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062002531565b8215620007845760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620012fc919062003de1565b6000604051808303816000865af19150503d80600081146200133b576040519150601f19603f3d011682016040523d82523d6000602084013e62001340565b606091505b509150506000818060200190518101906200135c919062003c7c565b905082861015620013875762001373868462003dc7565b6200137f908262003dc7565b9050620013a2565b62001393838762003dc7565b6200139f908262003dff565b90505b620013c081620012aa6318160ddd60e01b6200126460018d6200250c565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200796183398151915290638d1cc925906200140390869060040162003cc9565b6000604051808303816000875af115801562001423573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200144d919081019062003cfe565b90508051602082016000f091506001600160a01b038216620014c65760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000e93565b50919050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001502908690859060040162003b8f565b600060405180830381600087803b1580156200151d57600080fd5b505af115801562001532573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200796183398151915292506347e50cce915060440162000f8c565b6040516303223eab60e11b81526001600482015260008051602062007961833981519152906306447d5690602401600060405180830381600087803b158015620015c357600080fd5b505af1158015620015d8573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b1580156200162a57600080fd5b505af11580156200163f573d6000803e3d6000fd5b5050600854604051631c3d878d60e31b81526001600482015260009350839250829182916001600160a01b039091169063e1ec3c6890602401608060405180830381865afa15801562001696573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016bc919062003bff565b9350935093509350620016d184600162002412565b620016e583678ac7230489e800006200231b565b620016f282600062002412565b620016ff8160006200231b565b604080516390c5013b60e01b8152905160008051602062007961833981519152916390c5013b91600480830192600092919082900301818387803b1580156200174757600080fd5b505af1158015620013c0573d6000803e3d6000fd5b6000805160206200796183398151915263e5d6bf0262000ec4834262003dff565b60008054610100900460ff16156200179e5750600054610100900460ff1690565b6000600080516020620079618339815191523b15620018a95760405160009060008051602062007961833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200180b9083906519985a5b195960d21b9060200162003b8f565b60408051601f19818403018152908290526200182b929160200162003e1a565b60408051601f1981840301815290829052620018479162003de1565b6000604051808303816000865af19150503d806000811462001886576040519150601f19603f3d011682016040523d82523d6000602084013e6200188b565b606091505b5091505080806020019051810190620018a5919062003ba8565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000754908590859060040162003b8f565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d906200191e908590600160801b9060040162003b8f565b600060405180830381600087803b1580156200193957600080fd5b505af11580156200194e573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200796183398151915292506345b56078915060440162000754565b60085460408051632241285d60e01b8152905162001a18926001600160a01b031691632241285d9160048083019260209291908290030181865afa158015620019e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a09919062003c7c565b6702c68af0bb1400006200231b565b6008546040805163346a1fd960e21b8152905162001a93926001600160a01b03169163d1a87f649160048083019260209291908290030181865afa15801562001a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8b919062003c7c565b601e6200231b565b565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562001ae457600080fd5b505af115801562001af9573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b15801562001b4657600080fd5b505af115801562001b5b573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b15801562001bad57600080fd5b505af115801562001bc2573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b15801562001c0d57600080fd5b505af115801562001c22573d6000803e3d6000fd5b5050600854604051632e1a7d4d60e01b81526830ca024f987b90000060048201526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b15801562001c7557600080fd5b505af115801562001c8a573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562001cdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d02919062003bc8565b509250509150620011858268056bc75e2d631000006200231b565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001de9906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000fd481620012aa84620012816370a0823160e01b6200126460018a6200250c565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001e4a908590859060040162003b8f565b600060405180830381600087803b15801562001e6557600080fd5b505af115801562001e7a573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007961833981519152925063ca669fa7915060240162000754565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562001f0957600080fd5b505af115801562001f1e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b15801562001f6b57600080fd5b505af115801562001f80573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b15801562001fd257600080fd5b505af115801562001fe7573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b1580156200203257600080fd5b505af115801562002047573d6000803e3d6000fd5b5060008051602062007961833981519152925063e5d6bf029150620020729050426213c68062003dff565b6040518263ffffffff1660e01b81526004016200209191815260200190565b600060405180830381600087803b158015620020ac57600080fd5b505af1158015620020c1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b1580156200210e57600080fd5b505af115801562002123573d6000803e3d6000fd5b505060085460405163d8aed14560e01b815260016004820152678ac7230489e8000060248201526001600160a01b03909116925063d8aed1459150604401600060405180830381600087803b1580156200217c57600080fd5b505af115801562002191573d6000803e3d6000fd5b50506008546040516331c4efe360e21b81526200221c93506001600160a01b03909116915063c713bf8c90620021d09060019060009060040162003b8f565b602060405180830381865afa158015620021ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002214919062003c7c565b60006200231b565b600854604051632fd7543160e21b8152600160048201526000916001600160a01b03169063bf5d50c490602401606060405180830381865afa15801562002267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200228d919062003c4d565b509150506200229e8160006200231b565b600854604051630a14439160e01b81523060048201526000916001600160a01b031690630a14439190602401608060405180830381865afa158015620022e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200230e919062003bc8565b9350505050620011858160005b80821462001185577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200238e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620023c7919062003e4d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162002400919062003e86565b60405180910390a1620011856200253d565b806001600160a01b0316826001600160a01b03161462001185577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200249a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620024d3919062003eb1565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162002400919062003ef6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001185828262002641565b600080516020620079618339815191523b15620026305760405160009060008051602062007961833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620025ab9083906519985a5b195960d21b9060019060200162003f21565b60408051601f1981840301815290829052620025cb929160200162003e1a565b60408051601f1981840301815290829052620025e79162003de1565b6000604051808303816000865af19150503d806000811462002626576040519150601f19603f3d011682016040523d82523d6000602084013e6200262b565b606091505b505050505b6000805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620026b457602002820191906000526020600020905b8154815260200190600101908083116200269f575b50505050509050600083620026c983620029aa565b604051602001620026dc92919062003e1a565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200273091869188910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200276b57620027698762002a57565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620027ac91879189910162003f42565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620027f3919062003de1565b600060405180830381855afa9150503d806000811462002830576040519150601f19603f3d011682016040523d82523d6000602084013e62002835565b606091505b509150620028529050816200284c88602062003f7e565b6200374e565b604051630667f9d760e41b815290925060009150600080516020620079618339815191529063667f9d70906200288f908b90879060040162003b8f565b6020604051808303816000875af1158015620028af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028d5919062003c7c565b9050808214620028f95760405162461bcd60e51b815260040162000e939062003fa0565b6040516370ca10bb60e01b815260008051602062007961833981519152906370ca10bb9062002931908b9087908e9060040162003f21565b600060405180830381600087803b1580156200294c57600080fd5b505af115801562002961573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200299660028b01600062003802565b896004016000905550505050505050505050565b6060600082516020620029be919062003f7e565b67ffffffffffffffff811115620029d957620029d9620038e1565b6040519080825280601f01601f19166020018201604052801562002a04576020820181803683370190505b50905060005b835181101562000e9c57600084828151811062002a2b5762002a2b6200403b565b60200260200101519050808260200260200184015250808062002a4e9062004051565b91505062002a0a565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002ac957602002820191906000526020600020905b81548152602001906001019080831162002ab4575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002b159250859187910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002bb4576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002b8491859187910162003f42565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002bc283620029aa565b60405160200162002bd592919062003e1a565b60405160208183030381529060405290506000805160206200798183398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002c3457600080fd5b505af115801562002c49573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002c6a919062003de1565b600060405180830381855afa9150503d806000811462002ca7576040519150601f19603f3d011682016040523d82523d6000602084013e62002cac565b606091505b50915062002cc39050816200284c87602062003f7e565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007961833981519152906365bc9481906024016000604051808303816000875af115801562002d20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002d4a9190810190620040f6565b5090508051600103620030135760006000805160206200798183398151915260001c6001600160a01b031663667f9d70898460008151811062002d915762002d916200403b565b60200260200101516040518363ffffffff1660e01b815260040162002db892919062003b8f565b6020604051808303816000875af115801562002dd8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dfe919062003c7c565b90508062002e62577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002e3e5762002e3e6200403b565b602002602001015160001c60405162002e5992919062003b8f565b60405180910390a15b80831462002e845760405162461bcd60e51b815260040162000e939062003fa0565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002ebc92919062003f42565b604051602081830303815290604052805190602001208560008151811062002ee85762002ee86200403b565b602002602001015160001c60405162002f05949392919062004157565b60405180910390a18160008151811062002f235762002f236200403b565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002f6e918a918c910162003f42565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002fd8918a918c910162003f42565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620035d1565b600181511115620035605760005b8151811015620035595760006000805160206200798183398151915260001c6001600160a01b031663667f9d708a8585815181106200306457620030646200403b565b60200260200101516040518363ffffffff1660e01b81526004016200308b92919062003b8f565b6020604051808303816000875af1158015620030ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030d1919062003c7c565b90508062003134577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200311057620031106200403b565b602002602001015160001c6040516200312b92919062003b8f565b60405180910390a15b6000805160206200798183398151915260001c6001600160a01b03166370ca10bb8a8585815181106200316b576200316b6200403b565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620031999392919062003f21565b600060405180830381600087803b158015620031b457600080fd5b505af1158015620031c9573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620031eb919062003de1565b600060405180830381855afa9150503d806000811462003228576040519150601f19603f3d011682016040523d82523d6000602084013e6200322d565b606091505b50909250905062003245816200284c8b602062003f7e565b955081801562003259575061133760f01b86145b15620034ac577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200329792919062003f42565b60405160208183030381529060405280519060200120888881518110620032c257620032c26200403b565b602002602001015160001c604051620032df949392919062004157565b60405180910390a1848481518110620032fc57620032fc6200403b565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003347918d918f910162003f42565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620033d492919062003f42565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200798183398151915260001c6001600160a01b03166370ca10bb8c8787815181106200344657620034466200403b565b6020026020010151866040518463ffffffff1660e01b81526004016200346f9392919062003f21565b600060405180830381600087803b1580156200348a57600080fd5b505af11580156200349f573d6000803e3d6000fd5b5050505050505062003559565b6000805160206200798183398151915260001c6001600160a01b03166370ca10bb8c878781518110620034e357620034e36200403b565b6020026020010151866040518463ffffffff1660e01b81526004016200350c9392919062003f21565b600060405180830381600087803b1580156200352757600080fd5b505af11580156200353c573d6000803e3d6000fd5b505050505050508080620035509062004051565b91505062003021565b50620035d1565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000e93565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620036159188918a910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620036a45760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000e93565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620036d560028a01600062003802565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200371b9188918a910162003f42565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200376557845162003768565b60205b905060005b81811015620037ce576200378381600862003f7e565b8662003790838862003dff565b81518110620037a357620037a36200403b565b01602001516001600160f81b031916901c929092179180620037c58162004051565b9150506200376d565b5090949350505050565b610dc0806200418883390190565b610c498062004f4883390190565b611dd08062005b9183390190565b5080546000825590600052602060002090810190620006b091905b808211156200383357600081556001016200381d565b5090565b6001600160a01b0381168114620006b057600080fd5b600080604083850312156200386157600080fd5b82356200386e8162003837565b946020939093013593505050565b6000602082840312156200388f57600080fd5b81356200389c8162003837565b9392505050565b60008060408385031215620038b757600080fd5b8235620038c48162003837565b91506020830135620038d68162003837565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620039235762003923620038e1565b604052919050565b600067ffffffffffffffff821115620039485762003948620038e1565b50601f01601f191660200190565b60006200396d62003967846200392b565b620038f7565b90508281528383830111156200398257600080fd5b828260208301376000602084830101529392505050565b600082601f830112620039ab57600080fd5b6200389c8383356020850162003956565b60008060408385031215620039d057600080fd5b823567ffffffffffffffff80821115620039e957600080fd5b620039f78683870162003999565b9350602085013591508082111562003a0e57600080fd5b508301601f8101851362003a2157600080fd5b62003a328582356020840162003956565b9150509250929050565b60006020828403121562003a4f57600080fd5b5035919050565b60008060006060848603121562003a6c57600080fd5b833562003a798162003837565b9250602084013562003a8b8162003837565b929592945050506040919091013590565b8015158114620006b057600080fd5b6000806000806080858703121562003ac257600080fd5b843562003acf8162003837565b9350602085013562003ae18162003837565b925060408501359150606085013562003afa8162003a9c565b939692955090935050565b60006020828403121562003b1857600080fd5b813567ffffffffffffffff81111562003b3057600080fd5b62003b3e8482850162003999565b949350505050565b60408152600062003b6b6040830160048152635553444360e01b602082015260400190565b82810360208401526200389c8160048152635553444360e01b602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020828403121562003bbb57600080fd5b81516200389c8162003a9c565b6000806000806080858703121562003bdf57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000806000806080858703121562003c1657600080fd5b845162003c238162003837565b60208601516040870151919550935062003c3d8162003837565b6060959095015193969295505050565b60008060006060848603121562003c6357600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121562003c8f57600080fd5b5051919050565b60005b8381101562003cb357818101518382015260200162003c99565b8381111562003cc3576000848401525b50505050565b602081526000825180602084015262003cea81604085016020870162003c96565b601f01601f19169190910160400192915050565b60006020828403121562003d1157600080fd5b815167ffffffffffffffff81111562003d2957600080fd5b8201601f8101841362003d3b57600080fd5b805162003d4c62003967826200392b565b81815285602083850101111562003d6257600080fd5b62003d7582602083016020860162003c96565b95945050505050565b6000835162003d9281846020880162003c96565b83519083019062003da881836020880162003c96565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562003ddc5762003ddc62003db1565b500390565b6000825162003df581846020870162003c96565b9190910192915050565b6000821982111562003e155762003e1562003db1565b500190565b6001600160e01b031983168152815160009062003e3f81600485016020870162003c96565b919091016004019392505050565b60408152600062003e7860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062003e7860408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062003edc60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062003edc60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b8381101562003f6e5781518552938201939082019060010162003f50565b5050948252509092019392505050565b600081600019048311821515161562003f9b5762003f9b62003db1565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b60006001820162004066576200406662003db1565b5060010190565b600082601f8301126200407f57600080fd5b8151602067ffffffffffffffff8211156200409e576200409e620038e1565b8160051b620040af828201620038f7565b9283528481018201928281019087851115620040ca57600080fd5b83870192505b84831015620040eb57825182529183019190830190620040d0565b979650505050505050565b600080604083850312156200410a57600080fd5b825167ffffffffffffffff808211156200412357600080fd5b62004131868387016200406d565b935060208501519150808211156200414857600080fd5b5062003a32858286016200406d565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b50604051806040016040528060068152602001654d656469636960d01b815250604051806040016040528060048152602001634d49434960e01b81525081600390816200005f9190620001f9565b5060046200006e8282620001f9565b505050620000843360006200008a60201b60201c565b620002ec565b6001600160a01b038216620000e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f99190620002c5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018057607f821691505b602082108103620001a157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015057600081815260208120601f850160051c81016020861015620001d05750805b601f850160051c820191505b81811015620001f157828155600101620001dc565b505050505050565b81516001600160401b0381111562000215576200021562000155565b6200022d816200022684546200016b565b84620001a7565b602080601f8311600181146200026557600084156200024c5750858301515b600019600386901b1c1916600185901b178555620001f1565b600085815260208120601f198616915b82811015620002965788860151825594840194600190910190840162000275565b5085821015620002b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008219821115620002e757634e487b7160e01b600052601160045260246000fd5b500190565b610ac480620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d68146101a2578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b806342966c681461015c57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101ee565b6040516100e991906108e9565b60405180910390f35b61010561010036600461095a565b610280565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610984565b610298565b604051601281526020016100e9565b61010561015736600461095a565b6102bc565b61016f61016a3660046109c0565b6102de565b005b61011961017f3660046109d9565b6001600160a01b031660009081526020819052604090205490565b6100dc6102eb565b61016f6101b03660046109c0565b6102fa565b6101056101c336600461095a565b610304565b6101056101d636600461095a565b610384565b6101196101e93660046109fb565b610392565b6060600380546101fd90610a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461022990610a2e565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b60003361028e8185856103bd565b5060019392505050565b6000336102a68582856104e2565b6102b185858561055c565b506001949350505050565b60003361028e8185856102cf8383610392565b6102d99190610a68565b6103bd565b6102e83382610700565b50565b6060600480546101fd90610a2e565b6102e8338261082a565b600033816103128286610392565b9050838110156103775760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b182868684036103bd565b60003361028e81858561055c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661041f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036e565b6001600160a01b0382166104805760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104ee8484610392565b9050600019811461055657818110156105495760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161036e565b61055684848484036103bd565b50505050565b6001600160a01b0383166105c05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036e565b6001600160a01b0382166106225760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036e565b6001600160a01b0383166000908152602081905260409020548181101561069a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610556565b6001600160a01b0382166107605760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161036e565b6001600160a01b038216600090815260208190526040902054818110156107d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161036e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104d5565b6001600160a01b0382166108805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161036e565b80600260008282546108929190610a68565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610916578581018301518582016040015282016108fa565b81811115610928576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461095557600080fd5b919050565b6000806040838503121561096d57600080fd5b6109768361093e565b946020939093013593505050565b60008060006060848603121561099957600080fd5b6109a28461093e565b92506109b06020850161093e565b9150604084013590509250925092565b6000602082840312156109d257600080fd5b5035919050565b6000602082840312156109eb57600080fd5b6109f48261093e565b9392505050565b60008060408385031215610a0e57600080fd5b610a178361093e565b9150610a256020840161093e565b90509250929050565b600181811c90821680610a4257607f821691505b602082108103610a6257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610a8957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122050dea401dfbc2ab91414d8deca6217a17f0345afa4e854ac1116f442c111f78264736f6c634300080f003360806040523480156200001157600080fd5b5060405162000c4938038062000c4983398101604081905262000034916200012b565b8181600362000044838262000224565b50600462000053828262000224565b5050505050620002f0565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b83821115620001215760008385830101525b9695505050505050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000074565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000074565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200005e565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61094980620003006000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220c8a156403197094bfc581513cc1c1cabf2da875fa4285a5935c97008d8099aa064736f6c634300080f00336080604052600380546001600160a01b03191673e6b8a5cf854791412c1f6efc7caf629f5df1c7471790553480156200003757600080fd5b5060405162001dd038038062001dd08339810160408190526200005a9162000192565b620000653362000095565b60018055600280546001600160a01b0319166001600160a01b0383161790556200008e620000e5565b50620001c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000ef6200012a565b6702c68af0bb140000600455601e600b55662386f26fc10000600c55600060095562000128600562000189602090811b620016b817901c565b565b6000546001600160a01b03163314620001285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b80546001019055565b600060208284031215620001a557600080fd5b81516001600160a01b0381168114620001bd57600080fd5b9392505050565b611bfc80620001d46000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063aaf5bfc311610130578063d5002f2e116100b8578063e28db5401161007c578063e28db54014610460578063eb02241414610551578063f2fde38b14610559578063fe9d087e1461056c578063ffe6a18e1461057f57600080fd5b8063d5002f2e14610498578063d845a4b3146104a0578063d8aed145146104b3578063dee5b5ef146104c6578063e1ec3c68146104d957600080fd5b8063bf5d50c4116100ff578063bf5d50c41461040e578063c0e70e7314610458578063c63c8b3614610460578063c713bf8c1461047c578063d1a87f641461048f57600080fd5b8063aaf5bfc3146103a5578063b6b55f25146103d5578063b759f954146103e8578063b9306dda146103fb57600080fd5b806372f94365116101b35780638da5cb5b116101825780638da5cb5b1461033d5780639342215314610358578063939c2a2b1461036b5780639574af481461037e5780639be5b2bd1461039157600080fd5b806372f94365146102f6578063759135a1146102ff5780638129fc1c14610322578063853c637d1461032a57600080fd5b80632e1a7d4d116101fa5780632e1a7d4d146102aa5780633a98ef39146102bf578063512b7258146102c85780635ddbb376146102db578063715018a6146102ee57600080fd5b80630a1443911461022c5780630be56d34146102865780631d9bc62e146102985780632241285d146102a1575b600080fd5b61026161023a366004611a13565b60066020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6004545b60405190815260200161027d565b61028a600c5481565b61028a60045481565b6102bd6102b8366004611a2e565b610586565b005b61028a60095481565b61028a6102d6366004611a47565b6106cc565b6102bd6102e9366004611a2e565b610774565b6102bd610802565b61028a600a5481565b61031261030d366004611a2e565b610816565b604051901515815260200161027d565b6102bd610892565b6102bd610338366004611a2e565b6108c9565b6000546040516001600160a01b03909116815260200161027d565b6102bd610366366004611a2e565b610926565b6102bd610379366004611a2e565b610a51565b6102bd61038c366004611a13565b610a5e565b61028a61039f366004611a13565b50600090565b6102bd6103b3366004611a13565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102bd6103e3366004611a2e565b610a8a565b6102bd6103f6366004611a2e565b610c4b565b610312610409366004611a69565b610f86565b61043d61041c366004611a13565b60076020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161027d565b61028a611077565b61028a61046e366004611a2e565b50683635c9adc5dea0000090565b61028a61048a366004611a69565b611116565b61028a600b5481565b61028a611180565b6102bd6104ae366004611a2e565b6111ca565b6102bd6104c1366004611a47565b61136e565b6102bd6104d4366004611a13565b611586565b61051c6104e7366004611a2e565b60086020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391929091169084565b60405161027d94939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b61028a6115b6565b6102bd610567366004611a13565b61160b565b61028a61057a366004611a2e565b611684565b60c861028a565b600081116105db5760405162461bcd60e51b815260206004820152601c60248201527f4d757374207769746864726177206d6f7265207468616e207a65726f0000000060448201526064015b60405180910390fd5b336000908152600660205260408120600381015481549192916105fe9190611aa9565b9050828110156106455760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016105d2565b600061065084611684565b905061065b816108c9565b8383600001600082825461066f9190611aa9565b9091555061067e905033611586565b6106893033866116c1565b50604080518581526020810183905233917f2d4d49c3e017b8235c908cbaa83a2431a08f3b950712696ece2088964fd399f091015b60405180910390a250505050565b600073__$8103477d69fb98e53a0fc5d631f2d772d4$__63aa9a091284846004546106f79190611ac0565b6040516001600160e01b031960e085901b168152600481019290925260248201526813c9647e25a99400006044820152606401602060405180830381865af4158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611adf565b90505b92915050565b336000908152600660205260409020546107a05760405162461bcd60e51b81526004016105d290611af8565b60025460405163140e25ad60e31b8152600481018390526001600160a01b039091169063a0712d68906024015b600060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b5050505050565b61080a611830565b610814600061188a565b565b6000818152600860209081526040808320815160808101835281546001600160a01b0390811682526001830154948201949094526002820154909316918301919091526003015460608201524261086b6118da565b826060015161087a9190611b25565b10156108895750600192915050565b50600092915050565b61089a611830565b6702c68af0bb140000600455601e600b55662386f26fc10000600c556000600955610814600580546001019055565b336000908152600660205260409020546108f55760405162461bcd60e51b81526004016105d290611af8565b600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c68906024016107cd565b600081815260086020908152604091829020825160808101845281546001600160a01b0390811682526001830154938201939093526002820154909216928201839052600301546060820152906109ae5760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103637b0b760a11b60448201526064016105d2565b6040808201516001600160a01b031660009081526006602090815282822083516080810185528154815260018201548184015260028201549481019490945260030154606084019081529084018290528051610a0b908390611aa9565b905250602082015181518290610a22908390611aa9565b9052506020820151604082018051610a3b908390611aa9565b9052506040820151610a4c90611586565b505050565b610a59611830565b600455565b6001600160a01b0316600090815260076020526040902060c86002820155683635c9adc5dea000009055565b60008111610ada5760405162461bcd60e51b815260206004820152601b60248201527f4d757374206465706f736974206d6f7265207468616e207a65726f000000000060448201526064016105d2565b6000610ae582611684565b90506000610af43330856116c1565b905080610b435760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f207472616e7366657220666f72206465706f736974000060448201526064016105d2565b3360009081526006602052604081205460c89103610ba95760408051608081018252858152602080820184815282840188815260006060850181815233825260069094529490942092518355516001830155915160028201559051600390910155610c0a565b3360009081526006602052604081208054869290610bc8908490611b25565b90915550503360009081526006602052604081206002018054869290610bef908490611b25565b90915550503360009081526006602052604090206001018190555b610c1383610774565b604080518581526020810185905233917f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f991016106be565b33600090815260066020526040902054610c775760405162461bcd60e51b81526004016105d290611af8565b60008181526008602052604090206001810154610cc55760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103637b0b760a11b60448201526064016105d2565b60028101546001600160a01b031615610d185760405162461bcd60e51b8152602060048201526015602482015274131bd85b88185b1c9958591e48185c1c1c9bdd9959605a1b60448201526064016105d2565b336000908152600660205260409020600301546001820154610d3a9190611b25565b3360009081526006602052604090206002015411610d9a5760405162461bcd60e51b815260206004820152601e60248201527f476f696e67206f76657220796f757220617070726f76616c206c696d6974000060448201526064016105d2565b80546001600160a01b031660009081526007602052604090206002810154610dfd5760405162461bcd60e51b8152602060048201526016602482015275109bdc9c9bddd95c88191bd95cdb89dd08195e1a5cdd60521b60448201526064016105d2565b8154610e12906001600160a01b031684610f86565b15610e555760405162461bcd60e51b81526020600482015260136024820152724c6f616e20616c72656164792065786973747360681b60448201526064016105d2565b6003810180546001818101835560009283526020832090910185905583810154908301805491929091610e89908490611b25565b90915550506002820180546001600160a01b031916339081179091554260038085019190915560018401546000928352600660205260408320909101805491929091610ed6908490611b25565b925050819055506000610eee303385600101546116c1565b905080610f3d5760405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f207472616e7366657220666f7220626f72726f7700000060448201526064016105d2565b6001830154604080518681526020810192909252339182917f153dc5769b21c83a84e1d7b9c780392707982692fa5a6f78dbd841cdb7497edb910160405180910390a350505050565b6001600160a01b03821660009081526007602090815260408083208151608081018352815481526001820154818501526002820154818401526003820180548451818702810187019095528085528695929460608601939092919083018282801561101057602002820191906000526020600020905b815481526020019060010190808311610ffc575b505050505081525050905060005b81606001515181101561106c57838260600151828151811061104257611042611b3d565b60200260200101510361105a5760019250505061076e565b8061106481611b53565b91505061101e565b506000949350505050565b600073__$8103477d69fb98e53a0fc5d631f2d772d4$__63aa9a091261109b6115b6565b600c546040516001600160e01b031960e085901b16815260048101929092526024820152670de0b6b3a76400006044820152606401602060405180830381865af41580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190611adf565b905090565b6001600160a01b03821660009081526007602052604081206003015482106111405750600061076e565b6001600160a01b038316600090815260076020526040902060030180548390811061116d5761116d611b3d565b9060005260206000200154905092915050565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156110ed573d6000803e3d6000fd5b6000811161121a5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420626f72726f77206d6f7265207468616e207a65726f00000000000060448201526064016105d2565b336000908152600760205260408120600381015490910361123e5761123e33610a5e565b8054600182015461124f9084611b25565b1061129c5760405162461bcd60e51b815260206004820152601c60248201527f476f696e67206f76657220796f757220626f72726f77206c696d69740000000060448201526064016105d2565b60006112a760055490565b6040805160808101825233815260208082018781526000838501818152606085018281528783526008909452949020925183546001600160a01b039182166001600160a01b03199182161785559151600185015593516002840180549190951691161790925590516003909101559050611325600580546001019055565b61132e33610a5e565b604080518281526020810185905233917fc67abf520079310bcee1cfa50d430c50ae4a6ecba1849b43899611166b5e4c82910160405180910390a2505050565b600081116113be5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420626f72726f77206d6f7265207468616e207a65726f00000000000060448201526064016105d2565b60008281526008602090815260408083203384526007835281842060028201546001600160a01b03168552600690935292206113f985610816565b1561143c5760405162461bcd60e51b81526020600482015260136024820152725061737365642074686520646561646c696e6560681b60448201526064016105d2565b81600101548411156114905760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207265706179206d6f7265207468616e20796f75206f776500000060448201526064016105d2565b60006114a3856102d68660030154611901565b6114ad9086611b25565b905060006114bc3033886116c1565b90508061150b5760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f207472616e7366657220666f722072657061790000000060448201526064016105d2565b6000600186015584546115289088906001600160a01b031661191b565b8584600101600082825461153c9190611aa9565b92505081905550858360030160008282546115579190611aa9565b90915550611566905033610a5e565b600285015461157d906001600160a01b0316611586565b50505050505050565b6001600160a01b0316600090815260066020526040902060c86001820155683635c9adc5dea00000600290910155565b6003546000906001600160a01b03166040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156110ed573d6000803e3d6000fd5b611613611830565b6001600160a01b0381166116785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d2565b6116818161188a565b50565b600080600954836116959190611b25565b6116a784670de0b6b3a7640000611ac0565b6116b19190611b6c565b9392505050565b80546001019055565b60006001600160a01b0383166117195760405162461bcd60e51b815260206004820152601a60248201527f43616e27742073656e6420746f207a65726f206164647265737300000000000060448201526064016105d2565b6003546001600160a01b039081169030908616036117ac5760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a49190611b8e565b9150506116b1565b6040516323b872dd60e01b81526001600160a01b0386811660048301528581166024830152604482018590528216906323b872dd906064016020604051808303816000875af1158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190611b8e565b95945050505050565b6000546001600160a01b031633146108145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600b5460186118eb9190611ac0565b6118f690603c611ac0565b61111190603c611ac0565b6000620151806119118342611aa9565b61076e9190611b6c565b6001600160a01b038116600090815260076020526040812060030190805b825481101561197f578483828154811061195557611955611b3d565b90600052602060002001540361196d5780915061197f565b8061197781611b53565b915050611939565b508154829061199090600190611aa9565b815481106119a0576119a0611b3d565b90600052602060002001548282815481106119bd576119bd611b3d565b9060005260206000200181905550818054806119db576119db611bb0565b6001900381819060005260206000200160009055905550505050565b80356001600160a01b0381168114611a0e57600080fd5b919050565b600060208284031215611a2557600080fd5b61076b826119f7565b600060208284031215611a4057600080fd5b5035919050565b60008060408385031215611a5a57600080fd5b50508035926020909101359150565b60008060408385031215611a7c57600080fd5b611a85836119f7565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611abb57611abb611a93565b500390565b6000816000190483118215151615611ada57611ada611a93565b500290565b600060208284031215611af157600080fd5b5051919050565b60208082526013908201527226bab9ba1031329030b71030b8383937bb32b960691b604082015260600190565b60008219821115611b3857611b38611a93565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611b6557611b65611a93565b5060010190565b600082611b8957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611ba057600080fd5b815180151581146116b157600080fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220de83440ce9388dfb9698cb6573a7c3ce2572aae86fb229994da8cddc17dc5daa64736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122043b1ce81cab4d4d9eab6ce9fcf909ca011e59d14d72e689b6a8d72762e8b909664736f6c634300080f0033",
    "sourceMap": "384:2990:18:-:0;;;1572:26:0;;;-1:-1:-1;;171:28:1;;;;;384:2990:18;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/helpers/Math.sol": {
        "Math": [
          {
            "start": 25702,
            "length": 20
          },
          {
            "start": 28177,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c80639a8325a0116200010d578063d37fadb711620000a3578063e9a79a7b116200007a578063e9a79a7b14620003b7578063f19db19314620003ce578063f8ccbf4714620003d8578063fa7626d414620003ec57600080fd5b8063d37fadb7146200038c578063d509b16c1462000396578063d82555f114620003a057600080fd5b8063b9c071b411620000e4578063b9c071b4146200032c578063ba414fa61462000343578063c88a5e6d146200035e578063d06d8229146200037557600080fd5b80639a8325a014620002f4578063af9bbe5f146200030b578063b8a05374146200032257600080fd5b80632d6c17a311620001835780636bce989b116200015a5780636bce989b14620002a55780636f59707514620002bc5780637f924c4e14620002d357806397754ae914620002dd57600080fd5b80632d6c17a314620002605780633a76846314620002775780633bf82db1146200028e57600080fd5b80630a9254e414620001d1578063108554f214620001dd5780631aeb10a614620001f4578063233240ee14620001fe57806329a9e300146200021557806329ce9dde146200022c575b600080fd5b620001db620003fa565b005b620001db620001ee3660046200384d565b620006b3565b620001db6200078c565b620001db6200020f3660046200387c565b62000bec565b620001db62000226366004620038a3565b62000cc1565b620002436200023d366004620039bc565b62000d73565b6040516001600160a01b0390911681526020015b60405180910390f35b620001db6200027136600462003a3c565b62000ea3565b620002436000805160206200796183398151915281565b620001db6200029f36600462003a56565b62000ee3565b620001db620002b636600462003a56565b62000fc5565b620001db620002cd3660046200387c565b62000fd9565b620001db62001083565b620001db620002ee36600462003aab565b62001189565b620002436200030536600462003b05565b620013ca565b620001db6200031c36600462003a56565b620014cc565b620001db6200157a565b620001db6200033d36600462003a3c565b6200175c565b6200034d6200177d565b604051901515815260200162000257565b620001db6200036f3660046200384d565b620018ae565b620001db62000386366004620038a3565b620018e4565b620001db62001996565b620001db62001a95565b620001db620003b136600462003a56565b62001d1d565b620001db620003c83660046200384d565b62001e14565b620001db62001eba565b6000546200034d9062010000900460ff1681565b6000546200034d9060ff1681565b6040516200040890620037d8565b604051809103906000f08015801562000425573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169190911790556040516200045490620037e6565b6200045f9062003b46565b604051809103906000f0801580156200047c573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691821790556040516340c10f1960e01b81526340c10f1990620004ca903090683635c9adc5dea000009060040162003b8f565b600060405180830381600087803b158015620004e557600080fd5b505af1158015620004fa573d6000803e3d6000fd5b5050600a546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506200053c90600190683635c9adc5dea000009060040162003b8f565b600060405180830381600087803b1580156200055757600080fd5b505af11580156200056c573d6000803e3d6000fd5b50506009546040516001600160a01b0390911692506200058d9150620037f4565b6001600160a01b039091168152602001604051809103906000f080158015620005ba573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03928316908117909155600a5460405163aaf5bfc360e01b8152921660048301529063aaf5bfc390602401600060405180830381600087803b1580156200061657600080fd5b505af11580156200062b573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200066a92909116906000199060040162003b8f565b6020604051808303816000875af11580156200068a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006b0919062003ba8565b50565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d90620006e9908590859060040162003b8f565b600060405180830381600087803b1580156200070457600080fd5b505af115801562000719573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200796183398151915292506306447d5691506024015b600060405180830381600087803b1580156200076f57600080fd5b505af115801562000784573d6000803e3d6000fd5b505050505050565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620007db57600080fd5b505af1158015620007f0573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562000842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000868919062003bc8565b9350935050506200088382683635c9adc5dea000006200231b565b620008908160006200231b565b60405163ca669fa760e01b815260016004820152600080516020620079618339815191529063ca669fa790602401600060405180830381600087803b158015620008d957600080fd5b505af1158015620008ee573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b1580156200094057600080fd5b505af115801562000955573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b158015620009a057600080fd5b505af1158015620009b5573d6000803e3d6000fd5b5050600854604051631c3d878d60e31b815260016004820152600093508392506001600160a01b039091169063e1ec3c6890602401608060405180830381865afa15801562000a08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a2e919062003bff565b93509350505062000a40823062002412565b62000a4c81426200231b565b600854604051632fd7543160e21b8152600160048201526000916001600160a01b03169063bf5d50c490602401606060405180830381865afa15801562000a97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000abd919062003c4d565b5091505062000ad581678ac7230489e800006200231b565b6008546040516331c4efe360e21b815262000b5a916001600160a01b03169063c713bf8c9062000b0e9060019060009060040162003b8f565b602060405180830381865afa15801562000b2c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b52919062003c7c565b60016200231b565b600854604051630a14439160e01b81523060048201526001600160a01b0390911690630a14439190602401608060405180830381865afa15801562000ba3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bc9919062003bc8565b965062000be59250869150678ac7230489e8000090506200231b565b5050505050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000c26908490600160801b9060040162003b8f565b600060405180830381600087803b15801562000c4157600080fd5b505af115801562000c56573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007961833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000cac57600080fd5b505af115801562000be5573d6000803e3d6000fd5b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000cfb908590600160801b9060040162003b8f565b600060405180830381600087803b15801562000d1657600080fd5b505af115801562000d2b573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200796183398151915292506347e50cce915060440162000754565b604051638d1cc92560e01b815260009081906000805160206200796183398151915290638d1cc9259062000dac90879060040162003cc9565b6000604051808303816000875af115801562000dcc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000df6919081019062003cfe565b8360405160200162000e0a92919062003d7e565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000e9c5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206200796183398151915263e5d6bf0262000ec4834262003dc7565b6040518263ffffffff1660e01b815260040162000c9191815260200190565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000f19908690859060040162003b8f565b600060405180830381600087803b15801562000f3457600080fd5b505af115801562000f49573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200796183398151915292506345b5607891506044015b600060405180830381600087803b15801562000fa757600080fd5b505af115801562000fbc573d6000803e3d6000fd5b50505050505050565b62000fd4838383600062001189565b505050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001013908490600160801b9060040162003b8f565b600060405180830381600087803b1580156200102e57600080fd5b505af115801562001043573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200796183398151915292506306447d56915060240162000c91565b60085460405163b6b55f2560e01b8152670de0b6b3a764000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620010d157600080fd5b505af1158015620010e6573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562001138573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200115e919062003bc8565b9350505091506200117882670de0b6b3a76400006200231b565b620011858160006200231b565b5050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620011df9162003de1565b6000604051808303816000865af19150503d80600081146200121e576040519150601f19603f3d011682016040523d82523d6000602084013e62001223565b606091505b509150506000818060200190518101906200123f919062003c7c565b9050620012b184620012aa87620012816370a0823160e01b6200126460018d6200250c565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062002531565b8215620007845760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620012fc919062003de1565b6000604051808303816000865af19150503d80600081146200133b576040519150601f19603f3d011682016040523d82523d6000602084013e62001340565b606091505b509150506000818060200190518101906200135c919062003c7c565b905082861015620013875762001373868462003dc7565b6200137f908262003dc7565b9050620013a2565b62001393838762003dc7565b6200139f908262003dff565b90505b620013c081620012aa6318160ddd60e01b6200126460018d6200250c565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200796183398151915290638d1cc925906200140390869060040162003cc9565b6000604051808303816000875af115801562001423573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200144d919081019062003cfe565b90508051602082016000f091506001600160a01b038216620014c65760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000e93565b50919050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001502908690859060040162003b8f565b600060405180830381600087803b1580156200151d57600080fd5b505af115801562001532573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200796183398151915292506347e50cce915060440162000f8c565b6040516303223eab60e11b81526001600482015260008051602062007961833981519152906306447d5690602401600060405180830381600087803b158015620015c357600080fd5b505af1158015620015d8573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b1580156200162a57600080fd5b505af11580156200163f573d6000803e3d6000fd5b5050600854604051631c3d878d60e31b81526001600482015260009350839250829182916001600160a01b039091169063e1ec3c6890602401608060405180830381865afa15801562001696573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016bc919062003bff565b9350935093509350620016d184600162002412565b620016e583678ac7230489e800006200231b565b620016f282600062002412565b620016ff8160006200231b565b604080516390c5013b60e01b8152905160008051602062007961833981519152916390c5013b91600480830192600092919082900301818387803b1580156200174757600080fd5b505af1158015620013c0573d6000803e3d6000fd5b6000805160206200796183398151915263e5d6bf0262000ec4834262003dff565b60008054610100900460ff16156200179e5750600054610100900460ff1690565b6000600080516020620079618339815191523b15620018a95760405160009060008051602062007961833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200180b9083906519985a5b195960d21b9060200162003b8f565b60408051601f19818403018152908290526200182b929160200162003e1a565b60408051601f1981840301815290829052620018479162003de1565b6000604051808303816000865af19150503d806000811462001886576040519150601f19603f3d011682016040523d82523d6000602084013e6200188b565b606091505b5091505080806020019051810190620018a5919062003ba8565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062000754908590859060040162003b8f565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d906200191e908590600160801b9060040162003b8f565b600060405180830381600087803b1580156200193957600080fd5b505af11580156200194e573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200796183398151915292506345b56078915060440162000754565b60085460408051632241285d60e01b8152905162001a18926001600160a01b031691632241285d9160048083019260209291908290030181865afa158015620019e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a09919062003c7c565b6702c68af0bb1400006200231b565b6008546040805163346a1fd960e21b8152905162001a93926001600160a01b03169163d1a87f649160048083019260209291908290030181865afa15801562001a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8b919062003c7c565b601e6200231b565b565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562001ae457600080fd5b505af115801562001af9573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b15801562001b4657600080fd5b505af115801562001b5b573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b15801562001bad57600080fd5b505af115801562001bc2573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b15801562001c0d57600080fd5b505af115801562001c22573d6000803e3d6000fd5b5050600854604051632e1a7d4d60e01b81526830ca024f987b90000060048201526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b15801562001c7557600080fd5b505af115801562001c8a573d6000803e3d6000fd5b5050600854604051630a14439160e01b8152306004820152600093508392506001600160a01b0390911690630a14439190602401608060405180830381865afa15801562001cdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d02919062003bc8565b509250509150620011858268056bc75e2d631000006200231b565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001de9906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000fd481620012aa84620012816370a0823160e01b6200126460018a6200250c565b60405163c88a5e6d60e01b8152600080516020620079618339815191529063c88a5e6d9062001e4a908590859060040162003b8f565b600060405180830381600087803b15801562001e6557600080fd5b505af115801562001e7a573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007961833981519152925063ca669fa7915060240162000754565b60085460405163b6b55f2560e01b8152683635c9adc5dea0000060048201526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562001f0957600080fd5b505af115801562001f1e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b15801562001f6b57600080fd5b505af115801562001f80573d6000803e3d6000fd5b505060085460405163d845a4b360e01b8152678ac7230489e8000060048201526001600160a01b03909116925063d845a4b39150602401600060405180830381600087803b15801562001fd257600080fd5b505af115801562001fe7573d6000803e3d6000fd5b5050600854604051632dd67e5560e21b8152600160048201526001600160a01b03909116925063b759f9549150602401600060405180830381600087803b1580156200203257600080fd5b505af115801562002047573d6000803e3d6000fd5b5060008051602062007961833981519152925063e5d6bf029150620020729050426213c68062003dff565b6040518263ffffffff1660e01b81526004016200209191815260200190565b600060405180830381600087803b158015620020ac57600080fd5b505af1158015620020c1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600482015260008051602062007961833981519152925063ca669fa79150602401600060405180830381600087803b1580156200210e57600080fd5b505af115801562002123573d6000803e3d6000fd5b505060085460405163d8aed14560e01b815260016004820152678ac7230489e8000060248201526001600160a01b03909116925063d8aed1459150604401600060405180830381600087803b1580156200217c57600080fd5b505af115801562002191573d6000803e3d6000fd5b50506008546040516331c4efe360e21b81526200221c93506001600160a01b03909116915063c713bf8c90620021d09060019060009060040162003b8f565b602060405180830381865afa158015620021ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002214919062003c7c565b60006200231b565b600854604051632fd7543160e21b8152600160048201526000916001600160a01b03169063bf5d50c490602401606060405180830381865afa15801562002267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200228d919062003c4d565b509150506200229e8160006200231b565b600854604051630a14439160e01b81523060048201526000916001600160a01b031690630a14439190602401608060405180830381865afa158015620022e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200230e919062003bc8565b9350505050620011858160005b80821462001185577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200238e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620023c7919062003e4d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162002400919062003e86565b60405180910390a1620011856200253d565b806001600160a01b0316826001600160a01b03161462001185577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200249a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620024d3919062003eb1565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162002400919062003ef6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001185828262002641565b600080516020620079618339815191523b15620026305760405160009060008051602062007961833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620025ab9083906519985a5b195960d21b9060019060200162003f21565b60408051601f1981840301815290829052620025cb929160200162003e1a565b60408051601f1981840301815290829052620025e79162003de1565b6000604051808303816000865af19150503d806000811462002626576040519150601f19603f3d011682016040523d82523d6000602084013e6200262b565b606091505b505050505b6000805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620026b457602002820191906000526020600020905b8154815260200190600101908083116200269f575b50505050509050600083620026c983620029aa565b604051602001620026dc92919062003e1a565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200273091869188910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200276b57620027698762002a57565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620027ac91879189910162003f42565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620027f3919062003de1565b600060405180830381855afa9150503d806000811462002830576040519150601f19603f3d011682016040523d82523d6000602084013e62002835565b606091505b509150620028529050816200284c88602062003f7e565b6200374e565b604051630667f9d760e41b815290925060009150600080516020620079618339815191529063667f9d70906200288f908b90879060040162003b8f565b6020604051808303816000875af1158015620028af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028d5919062003c7c565b9050808214620028f95760405162461bcd60e51b815260040162000e939062003fa0565b6040516370ca10bb60e01b815260008051602062007961833981519152906370ca10bb9062002931908b9087908e9060040162003f21565b600060405180830381600087803b1580156200294c57600080fd5b505af115801562002961573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200299660028b01600062003802565b896004016000905550505050505050505050565b6060600082516020620029be919062003f7e565b67ffffffffffffffff811115620029d957620029d9620038e1565b6040519080825280601f01601f19166020018201604052801562002a04576020820181803683370190505b50905060005b835181101562000e9c57600084828151811062002a2b5762002a2b6200403b565b60200260200101519050808260200260200184015250808062002a4e9062004051565b91505062002a0a565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002ac957602002820191906000526020600020905b81548152602001906001019080831162002ab4575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002b159250859187910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002bb4576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002b8491859187910162003f42565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002bc283620029aa565b60405160200162002bd592919062003e1a565b60405160208183030381529060405290506000805160206200798183398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002c3457600080fd5b505af115801562002c49573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002c6a919062003de1565b600060405180830381855afa9150503d806000811462002ca7576040519150601f19603f3d011682016040523d82523d6000602084013e62002cac565b606091505b50915062002cc39050816200284c87602062003f7e565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007961833981519152906365bc9481906024016000604051808303816000875af115801562002d20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002d4a9190810190620040f6565b5090508051600103620030135760006000805160206200798183398151915260001c6001600160a01b031663667f9d70898460008151811062002d915762002d916200403b565b60200260200101516040518363ffffffff1660e01b815260040162002db892919062003b8f565b6020604051808303816000875af115801562002dd8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dfe919062003c7c565b90508062002e62577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002e3e5762002e3e6200403b565b602002602001015160001c60405162002e5992919062003b8f565b60405180910390a15b80831462002e845760405162461bcd60e51b815260040162000e939062003fa0565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002ebc92919062003f42565b604051602081830303815290604052805190602001208560008151811062002ee85762002ee86200403b565b602002602001015160001c60405162002f05949392919062004157565b60405180910390a18160008151811062002f235762002f236200403b565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002f6e918a918c910162003f42565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002fd8918a918c910162003f42565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620035d1565b600181511115620035605760005b8151811015620035595760006000805160206200798183398151915260001c6001600160a01b031663667f9d708a8585815181106200306457620030646200403b565b60200260200101516040518363ffffffff1660e01b81526004016200308b92919062003b8f565b6020604051808303816000875af1158015620030ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030d1919062003c7c565b90508062003134577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200311057620031106200403b565b602002602001015160001c6040516200312b92919062003b8f565b60405180910390a15b6000805160206200798183398151915260001c6001600160a01b03166370ca10bb8a8585815181106200316b576200316b6200403b565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620031999392919062003f21565b600060405180830381600087803b158015620031b457600080fd5b505af1158015620031c9573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620031eb919062003de1565b600060405180830381855afa9150503d806000811462003228576040519150601f19603f3d011682016040523d82523d6000602084013e6200322d565b606091505b50909250905062003245816200284c8b602062003f7e565b955081801562003259575061133760f01b86145b15620034ac577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200329792919062003f42565b60405160208183030381529060405280519060200120888881518110620032c257620032c26200403b565b602002602001015160001c604051620032df949392919062004157565b60405180910390a1848481518110620032fc57620032fc6200403b565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003347918d918f910162003f42565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620033d492919062003f42565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200798183398151915260001c6001600160a01b03166370ca10bb8c8787815181106200344657620034466200403b565b6020026020010151866040518463ffffffff1660e01b81526004016200346f9392919062003f21565b600060405180830381600087803b1580156200348a57600080fd5b505af11580156200349f573d6000803e3d6000fd5b5050505050505062003559565b6000805160206200798183398151915260001c6001600160a01b03166370ca10bb8c878781518110620034e357620034e36200403b565b6020026020010151866040518463ffffffff1660e01b81526004016200350c9392919062003f21565b600060405180830381600087803b1580156200352757600080fd5b505af11580156200353c573d6000803e3d6000fd5b505050505050508080620035509062004051565b91505062003021565b50620035d1565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000e93565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620036159188918a910162003f42565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620036a45760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000e93565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620036d560028a01600062003802565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200371b9188918a910162003f42565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200376557845162003768565b60205b905060005b81811015620037ce576200378381600862003f7e565b8662003790838862003dff565b81518110620037a357620037a36200403b565b01602001516001600160f81b031916901c929092179180620037c58162004051565b9150506200376d565b5090949350505050565b610dc0806200418883390190565b610c498062004f4883390190565b611dd08062005b9183390190565b5080546000825590600052602060002090810190620006b091905b808211156200383357600081556001016200381d565b5090565b6001600160a01b0381168114620006b057600080fd5b600080604083850312156200386157600080fd5b82356200386e8162003837565b946020939093013593505050565b6000602082840312156200388f57600080fd5b81356200389c8162003837565b9392505050565b60008060408385031215620038b757600080fd5b8235620038c48162003837565b91506020830135620038d68162003837565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620039235762003923620038e1565b604052919050565b600067ffffffffffffffff821115620039485762003948620038e1565b50601f01601f191660200190565b60006200396d62003967846200392b565b620038f7565b90508281528383830111156200398257600080fd5b828260208301376000602084830101529392505050565b600082601f830112620039ab57600080fd5b6200389c8383356020850162003956565b60008060408385031215620039d057600080fd5b823567ffffffffffffffff80821115620039e957600080fd5b620039f78683870162003999565b9350602085013591508082111562003a0e57600080fd5b508301601f8101851362003a2157600080fd5b62003a328582356020840162003956565b9150509250929050565b60006020828403121562003a4f57600080fd5b5035919050565b60008060006060848603121562003a6c57600080fd5b833562003a798162003837565b9250602084013562003a8b8162003837565b929592945050506040919091013590565b8015158114620006b057600080fd5b6000806000806080858703121562003ac257600080fd5b843562003acf8162003837565b9350602085013562003ae18162003837565b925060408501359150606085013562003afa8162003a9c565b939692955090935050565b60006020828403121562003b1857600080fd5b813567ffffffffffffffff81111562003b3057600080fd5b62003b3e8482850162003999565b949350505050565b60408152600062003b6b6040830160048152635553444360e01b602082015260400190565b82810360208401526200389c8160048152635553444360e01b602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020828403121562003bbb57600080fd5b81516200389c8162003a9c565b6000806000806080858703121562003bdf57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000806000806080858703121562003c1657600080fd5b845162003c238162003837565b60208601516040870151919550935062003c3d8162003837565b6060959095015193969295505050565b60008060006060848603121562003c6357600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121562003c8f57600080fd5b5051919050565b60005b8381101562003cb357818101518382015260200162003c99565b8381111562003cc3576000848401525b50505050565b602081526000825180602084015262003cea81604085016020870162003c96565b601f01601f19169190910160400192915050565b60006020828403121562003d1157600080fd5b815167ffffffffffffffff81111562003d2957600080fd5b8201601f8101841362003d3b57600080fd5b805162003d4c62003967826200392b565b81815285602083850101111562003d6257600080fd5b62003d7582602083016020860162003c96565b95945050505050565b6000835162003d9281846020880162003c96565b83519083019062003da881836020880162003c96565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562003ddc5762003ddc62003db1565b500390565b6000825162003df581846020870162003c96565b9190910192915050565b6000821982111562003e155762003e1562003db1565b500190565b6001600160e01b031983168152815160009062003e3f81600485016020870162003c96565b919091016004019392505050565b60408152600062003e7860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062003e7860408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062003edc60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062003edc60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b8381101562003f6e5781518552938201939082019060010162003f50565b5050948252509092019392505050565b600081600019048311821515161562003f9b5762003f9b62003db1565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b60006001820162004066576200406662003db1565b5060010190565b600082601f8301126200407f57600080fd5b8151602067ffffffffffffffff8211156200409e576200409e620038e1565b8160051b620040af828201620038f7565b9283528481018201928281019087851115620040ca57600080fd5b83870192505b84831015620040eb57825182529183019190830190620040d0565b979650505050505050565b600080604083850312156200410a57600080fd5b825167ffffffffffffffff808211156200412357600080fd5b62004131868387016200406d565b935060208501519150808211156200414857600080fd5b5062003a32858286016200406d565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b50604051806040016040528060068152602001654d656469636960d01b815250604051806040016040528060048152602001634d49434960e01b81525081600390816200005f9190620001f9565b5060046200006e8282620001f9565b505050620000843360006200008a60201b60201c565b620002ec565b6001600160a01b038216620000e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f99190620002c5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018057607f821691505b602082108103620001a157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015057600081815260208120601f850160051c81016020861015620001d05750805b601f850160051c820191505b81811015620001f157828155600101620001dc565b505050505050565b81516001600160401b0381111562000215576200021562000155565b6200022d816200022684546200016b565b84620001a7565b602080601f8311600181146200026557600084156200024c5750858301515b600019600386901b1c1916600185901b178555620001f1565b600085815260208120601f198616915b82811015620002965788860151825594840194600190910190840162000275565b5085821015620002b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008219821115620002e757634e487b7160e01b600052601160045260246000fd5b500190565b610ac480620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d68146101a2578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b806342966c681461015c57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101ee565b6040516100e991906108e9565b60405180910390f35b61010561010036600461095a565b610280565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610984565b610298565b604051601281526020016100e9565b61010561015736600461095a565b6102bc565b61016f61016a3660046109c0565b6102de565b005b61011961017f3660046109d9565b6001600160a01b031660009081526020819052604090205490565b6100dc6102eb565b61016f6101b03660046109c0565b6102fa565b6101056101c336600461095a565b610304565b6101056101d636600461095a565b610384565b6101196101e93660046109fb565b610392565b6060600380546101fd90610a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461022990610a2e565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b60003361028e8185856103bd565b5060019392505050565b6000336102a68582856104e2565b6102b185858561055c565b506001949350505050565b60003361028e8185856102cf8383610392565b6102d99190610a68565b6103bd565b6102e83382610700565b50565b6060600480546101fd90610a2e565b6102e8338261082a565b600033816103128286610392565b9050838110156103775760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b182868684036103bd565b60003361028e81858561055c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661041f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036e565b6001600160a01b0382166104805760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104ee8484610392565b9050600019811461055657818110156105495760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161036e565b61055684848484036103bd565b50505050565b6001600160a01b0383166105c05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036e565b6001600160a01b0382166106225760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036e565b6001600160a01b0383166000908152602081905260409020548181101561069a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610556565b6001600160a01b0382166107605760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161036e565b6001600160a01b038216600090815260208190526040902054818110156107d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161036e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104d5565b6001600160a01b0382166108805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161036e565b80600260008282546108929190610a68565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610916578581018301518582016040015282016108fa565b81811115610928576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461095557600080fd5b919050565b6000806040838503121561096d57600080fd5b6109768361093e565b946020939093013593505050565b60008060006060848603121561099957600080fd5b6109a28461093e565b92506109b06020850161093e565b9150604084013590509250925092565b6000602082840312156109d257600080fd5b5035919050565b6000602082840312156109eb57600080fd5b6109f48261093e565b9392505050565b60008060408385031215610a0e57600080fd5b610a178361093e565b9150610a256020840161093e565b90509250929050565b600181811c90821680610a4257607f821691505b602082108103610a6257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610a8957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122050dea401dfbc2ab91414d8deca6217a17f0345afa4e854ac1116f442c111f78264736f6c634300080f003360806040523480156200001157600080fd5b5060405162000c4938038062000c4983398101604081905262000034916200012b565b8181600362000044838262000224565b50600462000053828262000224565b5050505050620002f0565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b83821115620001215760008385830101525b9695505050505050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000074565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000074565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200005e565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61094980620003006000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220c8a156403197094bfc581513cc1c1cabf2da875fa4285a5935c97008d8099aa064736f6c634300080f00336080604052600380546001600160a01b03191673e6b8a5cf854791412c1f6efc7caf629f5df1c7471790553480156200003757600080fd5b5060405162001dd038038062001dd08339810160408190526200005a9162000192565b620000653362000095565b60018055600280546001600160a01b0319166001600160a01b0383161790556200008e620000e5565b50620001c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000ef6200012a565b6702c68af0bb140000600455601e600b55662386f26fc10000600c55600060095562000128600562000189602090811b620016b817901c565b565b6000546001600160a01b03163314620001285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b80546001019055565b600060208284031215620001a557600080fd5b81516001600160a01b0381168114620001bd57600080fd5b9392505050565b611bfc80620001d46000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063aaf5bfc311610130578063d5002f2e116100b8578063e28db5401161007c578063e28db54014610460578063eb02241414610551578063f2fde38b14610559578063fe9d087e1461056c578063ffe6a18e1461057f57600080fd5b8063d5002f2e14610498578063d845a4b3146104a0578063d8aed145146104b3578063dee5b5ef146104c6578063e1ec3c68146104d957600080fd5b8063bf5d50c4116100ff578063bf5d50c41461040e578063c0e70e7314610458578063c63c8b3614610460578063c713bf8c1461047c578063d1a87f641461048f57600080fd5b8063aaf5bfc3146103a5578063b6b55f25146103d5578063b759f954146103e8578063b9306dda146103fb57600080fd5b806372f94365116101b35780638da5cb5b116101825780638da5cb5b1461033d5780639342215314610358578063939c2a2b1461036b5780639574af481461037e5780639be5b2bd1461039157600080fd5b806372f94365146102f6578063759135a1146102ff5780638129fc1c14610322578063853c637d1461032a57600080fd5b80632e1a7d4d116101fa5780632e1a7d4d146102aa5780633a98ef39146102bf578063512b7258146102c85780635ddbb376146102db578063715018a6146102ee57600080fd5b80630a1443911461022c5780630be56d34146102865780631d9bc62e146102985780632241285d146102a1575b600080fd5b61026161023a366004611a13565b60066020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6004545b60405190815260200161027d565b61028a600c5481565b61028a60045481565b6102bd6102b8366004611a2e565b610586565b005b61028a60095481565b61028a6102d6366004611a47565b6106cc565b6102bd6102e9366004611a2e565b610774565b6102bd610802565b61028a600a5481565b61031261030d366004611a2e565b610816565b604051901515815260200161027d565b6102bd610892565b6102bd610338366004611a2e565b6108c9565b6000546040516001600160a01b03909116815260200161027d565b6102bd610366366004611a2e565b610926565b6102bd610379366004611a2e565b610a51565b6102bd61038c366004611a13565b610a5e565b61028a61039f366004611a13565b50600090565b6102bd6103b3366004611a13565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102bd6103e3366004611a2e565b610a8a565b6102bd6103f6366004611a2e565b610c4b565b610312610409366004611a69565b610f86565b61043d61041c366004611a13565b60076020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161027d565b61028a611077565b61028a61046e366004611a2e565b50683635c9adc5dea0000090565b61028a61048a366004611a69565b611116565b61028a600b5481565b61028a611180565b6102bd6104ae366004611a2e565b6111ca565b6102bd6104c1366004611a47565b61136e565b6102bd6104d4366004611a13565b611586565b61051c6104e7366004611a2e565b60086020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391929091169084565b60405161027d94939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b61028a6115b6565b6102bd610567366004611a13565b61160b565b61028a61057a366004611a2e565b611684565b60c861028a565b600081116105db5760405162461bcd60e51b815260206004820152601c60248201527f4d757374207769746864726177206d6f7265207468616e207a65726f0000000060448201526064015b60405180910390fd5b336000908152600660205260408120600381015481549192916105fe9190611aa9565b9050828110156106455760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016105d2565b600061065084611684565b905061065b816108c9565b8383600001600082825461066f9190611aa9565b9091555061067e905033611586565b6106893033866116c1565b50604080518581526020810183905233917f2d4d49c3e017b8235c908cbaa83a2431a08f3b950712696ece2088964fd399f091015b60405180910390a250505050565b600073__$8103477d69fb98e53a0fc5d631f2d772d4$__63aa9a091284846004546106f79190611ac0565b6040516001600160e01b031960e085901b168152600481019290925260248201526813c9647e25a99400006044820152606401602060405180830381865af4158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611adf565b90505b92915050565b336000908152600660205260409020546107a05760405162461bcd60e51b81526004016105d290611af8565b60025460405163140e25ad60e31b8152600481018390526001600160a01b039091169063a0712d68906024015b600060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b5050505050565b61080a611830565b610814600061188a565b565b6000818152600860209081526040808320815160808101835281546001600160a01b0390811682526001830154948201949094526002820154909316918301919091526003015460608201524261086b6118da565b826060015161087a9190611b25565b10156108895750600192915050565b50600092915050565b61089a611830565b6702c68af0bb140000600455601e600b55662386f26fc10000600c556000600955610814600580546001019055565b336000908152600660205260409020546108f55760405162461bcd60e51b81526004016105d290611af8565b600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c68906024016107cd565b600081815260086020908152604091829020825160808101845281546001600160a01b0390811682526001830154938201939093526002820154909216928201839052600301546060820152906109ae5760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103637b0b760a11b60448201526064016105d2565b6040808201516001600160a01b031660009081526006602090815282822083516080810185528154815260018201548184015260028201549481019490945260030154606084019081529084018290528051610a0b908390611aa9565b905250602082015181518290610a22908390611aa9565b9052506020820151604082018051610a3b908390611aa9565b9052506040820151610a4c90611586565b505050565b610a59611830565b600455565b6001600160a01b0316600090815260076020526040902060c86002820155683635c9adc5dea000009055565b60008111610ada5760405162461bcd60e51b815260206004820152601b60248201527f4d757374206465706f736974206d6f7265207468616e207a65726f000000000060448201526064016105d2565b6000610ae582611684565b90506000610af43330856116c1565b905080610b435760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f207472616e7366657220666f72206465706f736974000060448201526064016105d2565b3360009081526006602052604081205460c89103610ba95760408051608081018252858152602080820184815282840188815260006060850181815233825260069094529490942092518355516001830155915160028201559051600390910155610c0a565b3360009081526006602052604081208054869290610bc8908490611b25565b90915550503360009081526006602052604081206002018054869290610bef908490611b25565b90915550503360009081526006602052604090206001018190555b610c1383610774565b604080518581526020810185905233917f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f991016106be565b33600090815260066020526040902054610c775760405162461bcd60e51b81526004016105d290611af8565b60008181526008602052604090206001810154610cc55760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103637b0b760a11b60448201526064016105d2565b60028101546001600160a01b031615610d185760405162461bcd60e51b8152602060048201526015602482015274131bd85b88185b1c9958591e48185c1c1c9bdd9959605a1b60448201526064016105d2565b336000908152600660205260409020600301546001820154610d3a9190611b25565b3360009081526006602052604090206002015411610d9a5760405162461bcd60e51b815260206004820152601e60248201527f476f696e67206f76657220796f757220617070726f76616c206c696d6974000060448201526064016105d2565b80546001600160a01b031660009081526007602052604090206002810154610dfd5760405162461bcd60e51b8152602060048201526016602482015275109bdc9c9bddd95c88191bd95cdb89dd08195e1a5cdd60521b60448201526064016105d2565b8154610e12906001600160a01b031684610f86565b15610e555760405162461bcd60e51b81526020600482015260136024820152724c6f616e20616c72656164792065786973747360681b60448201526064016105d2565b6003810180546001818101835560009283526020832090910185905583810154908301805491929091610e89908490611b25565b90915550506002820180546001600160a01b031916339081179091554260038085019190915560018401546000928352600660205260408320909101805491929091610ed6908490611b25565b925050819055506000610eee303385600101546116c1565b905080610f3d5760405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f207472616e7366657220666f7220626f72726f7700000060448201526064016105d2565b6001830154604080518681526020810192909252339182917f153dc5769b21c83a84e1d7b9c780392707982692fa5a6f78dbd841cdb7497edb910160405180910390a350505050565b6001600160a01b03821660009081526007602090815260408083208151608081018352815481526001820154818501526002820154818401526003820180548451818702810187019095528085528695929460608601939092919083018282801561101057602002820191906000526020600020905b815481526020019060010190808311610ffc575b505050505081525050905060005b81606001515181101561106c57838260600151828151811061104257611042611b3d565b60200260200101510361105a5760019250505061076e565b8061106481611b53565b91505061101e565b506000949350505050565b600073__$8103477d69fb98e53a0fc5d631f2d772d4$__63aa9a091261109b6115b6565b600c546040516001600160e01b031960e085901b16815260048101929092526024820152670de0b6b3a76400006044820152606401602060405180830381865af41580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190611adf565b905090565b6001600160a01b03821660009081526007602052604081206003015482106111405750600061076e565b6001600160a01b038316600090815260076020526040902060030180548390811061116d5761116d611b3d565b9060005260206000200154905092915050565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156110ed573d6000803e3d6000fd5b6000811161121a5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420626f72726f77206d6f7265207468616e207a65726f00000000000060448201526064016105d2565b336000908152600760205260408120600381015490910361123e5761123e33610a5e565b8054600182015461124f9084611b25565b1061129c5760405162461bcd60e51b815260206004820152601c60248201527f476f696e67206f76657220796f757220626f72726f77206c696d69740000000060448201526064016105d2565b60006112a760055490565b6040805160808101825233815260208082018781526000838501818152606085018281528783526008909452949020925183546001600160a01b039182166001600160a01b03199182161785559151600185015593516002840180549190951691161790925590516003909101559050611325600580546001019055565b61132e33610a5e565b604080518281526020810185905233917fc67abf520079310bcee1cfa50d430c50ae4a6ecba1849b43899611166b5e4c82910160405180910390a2505050565b600081116113be5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420626f72726f77206d6f7265207468616e207a65726f00000000000060448201526064016105d2565b60008281526008602090815260408083203384526007835281842060028201546001600160a01b03168552600690935292206113f985610816565b1561143c5760405162461bcd60e51b81526020600482015260136024820152725061737365642074686520646561646c696e6560681b60448201526064016105d2565b81600101548411156114905760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207265706179206d6f7265207468616e20796f75206f776500000060448201526064016105d2565b60006114a3856102d68660030154611901565b6114ad9086611b25565b905060006114bc3033886116c1565b90508061150b5760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f207472616e7366657220666f722072657061790000000060448201526064016105d2565b6000600186015584546115289088906001600160a01b031661191b565b8584600101600082825461153c9190611aa9565b92505081905550858360030160008282546115579190611aa9565b90915550611566905033610a5e565b600285015461157d906001600160a01b0316611586565b50505050505050565b6001600160a01b0316600090815260066020526040902060c86001820155683635c9adc5dea00000600290910155565b6003546000906001600160a01b03166040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156110ed573d6000803e3d6000fd5b611613611830565b6001600160a01b0381166116785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d2565b6116818161188a565b50565b600080600954836116959190611b25565b6116a784670de0b6b3a7640000611ac0565b6116b19190611b6c565b9392505050565b80546001019055565b60006001600160a01b0383166117195760405162461bcd60e51b815260206004820152601a60248201527f43616e27742073656e6420746f207a65726f206164647265737300000000000060448201526064016105d2565b6003546001600160a01b039081169030908616036117ac5760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a49190611b8e565b9150506116b1565b6040516323b872dd60e01b81526001600160a01b0386811660048301528581166024830152604482018590528216906323b872dd906064016020604051808303816000875af1158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190611b8e565b95945050505050565b6000546001600160a01b031633146108145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600b5460186118eb9190611ac0565b6118f690603c611ac0565b61111190603c611ac0565b6000620151806119118342611aa9565b61076e9190611b6c565b6001600160a01b038116600090815260076020526040812060030190805b825481101561197f578483828154811061195557611955611b3d565b90600052602060002001540361196d5780915061197f565b8061197781611b53565b915050611939565b508154829061199090600190611aa9565b815481106119a0576119a0611b3d565b90600052602060002001548282815481106119bd576119bd611b3d565b9060005260206000200181905550818054806119db576119db611bb0565b6001900381819060005260206000200160009055905550505050565b80356001600160a01b0381168114611a0e57600080fd5b919050565b600060208284031215611a2557600080fd5b61076b826119f7565b600060208284031215611a4057600080fd5b5035919050565b60008060408385031215611a5a57600080fd5b50508035926020909101359150565b60008060408385031215611a7c57600080fd5b611a85836119f7565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611abb57611abb611a93565b500390565b6000816000190483118215151615611ada57611ada611a93565b500290565b600060208284031215611af157600080fd5b5051919050565b60208082526013908201527226bab9ba1031329030b71030b8383937bb32b960691b604082015260600190565b60008219821115611b3857611b38611a93565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611b6557611b65611a93565b5060010190565b600082611b8957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611ba057600080fd5b815180151581146116b157600080fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220de83440ce9388dfb9698cb6573a7c3ce2572aae86fb229994da8cddc17dc5daa64736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122043b1ce81cab4d4d9eab6ce9fcf909ca011e59d14d72e689b6a8d72762e8b909664736f6c634300080f0033",
    "sourceMap": "384:2990:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:344;;;:::i;:::-;;2070:116:2;;;;;;:::i;:::-;;:::i;1676:799:18:-;;;:::i;1417:96:2:-;;;;;;:::i;:::-;;:::i;1631:120::-;;;;;;:::i;:::-;;:::i;5142:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3129:32:19;;;3111:51;;3099:2;3084:18;5142:455:2;;;;;;;;1269:85;;;;;;:::i;:::-;;:::i;322:38:1:-;;-1:-1:-1;;;;;;;;;;;322:38:1;;2441:140:2;;;;;;:::i;:::-;;:::i;3370:107::-;;;;;;:::i;:::-;;:::i;1958:106::-;;;;;;:::i;:::-;;:::i;1002:229:18:-;;;:::i;3483:915:2:-;;;;;;:::i;:::-;;:::i;5603:406::-;;;;;;:::i;:::-;;:::i;1757:130::-;;;;;;:::i;:::-;;:::i;1237:433:18:-;;;:::i;1180:83:2:-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;5250:14:19;;5243:22;5225:41;;5213:2;5198:18;1819:584:0;5085:187:19;3165:81:2;;;;;;:::i;:::-;;:::i;2305:130::-;;;;;;:::i;:::-;;:::i;867:129:18:-;;;:::i;3065:307::-;;;:::i;2733:341:2:-;;;;;;:::i;:::-;;:::i;1519:106::-;;;;;;:::i;:::-;;:::i;2481:578:18:-;;;:::i;171:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;517:344:18;558:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:4:18;:24;;-1:-1:-1;;;;;;551:24:18;-1:-1:-1;;;;;551:24:18;;;;;;;;;;592:33;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;585:4:18;:40;;-1:-1:-1;;;;;;585:40:18;-1:-1:-1;;;;;585:40:18;;;;;;;;;635:33;;-1:-1:-1;;;635:33:18;;:9;;:33;;653:4;;660:7;;635:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;678:4:18;;:30;;-1:-1:-1;;;678:30:18;;-1:-1:-1;;;;;678:4:18;;;;-1:-1:-1;678:9:18;;-1:-1:-1;678:30:18;;:4;;700:7;;678:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;748:4:18;;725:29;;-1:-1:-1;;;;;748:4:18;;;;-1:-1:-1;725:29:18;;-1:-1:-1;725:29:18;:::i;:::-;-1:-1:-1;;;;;3129:32:19;;;3111:51;;3099:2;3084:18;725:29:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;718:4:18;:36;;-1:-1:-1;;;;;;718:36:18;-1:-1:-1;;;;;718:36:18;;;;;;;;;792:4;;764:34;;-1:-1:-1;;;764:34:18;;792:4;;764:34;;;3111:51:19;718:36:18;764:19;;3084:18:19;;764:34:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;808:4:18;;829;;808:46;;-1:-1:-1;;;808:46:18;;-1:-1:-1;;;;;808:4:18;;;;-1:-1:-1;808:12:18;;-1:-1:-1;808:46:18;;829:4;;;;-1:-1:-1;;836:17:18;808:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;517:344::o;2070:116:2:-;2133:18;;-1:-1:-1;;;2133:18:2;;-1:-1:-1;;;;;;;;;;;251:64:1;2133:7:2;;:18;;2141:3;;2146:4;;2133:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2161:18:2;;-1:-1:-1;;;2161:18:2;;-1:-1:-1;;;;;3129:32:19;;2161:18:2;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2161:13:2;;-1:-1:-1;3084:18:19;;2161::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:116;;:::o;1676:799:18:-;1734:4;;:21;;-1:-1:-1;;;1734:21:18;;1747:7;1734:21;;;6948:25:19;-1:-1:-1;;;;;1734:4:18;;;;:12;;6921:18:19;;1734:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1822:4:18;;:29;;-1:-1:-1;;;1822:29:18;;1845:4;1822:29;;;3111:51:19;1770:21:18;;-1:-1:-1;1770:21:18;;-1:-1:-1;;;;;;1822:4:18;;;;:14;;3084:18:19;;1822:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1765:86;;;;;;1861:32;1870:13;1885:7;1861:8;:32::i;:::-;1903:30;1912:17;1931:1;1903:8;:30::i;:::-;1944:20;;-1:-1:-1;;;1944:20:18;;1961:1;1944:20;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;1944:8:18;;3084:18:19;;1944:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1974:4:18;;:19;;-1:-1:-1;;;1974:19:18;;1987:5;1974:19;;;6948:25:19;-1:-1:-1;;;;;1974:4:18;;;;-1:-1:-1;1974:12:18;;-1:-1:-1;6921:18:19;;1974:19:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2004:4:18;;:15;;-1:-1:-1;;;2004:15:18;;:4;:15;;;6948:25:19;-1:-1:-1;;;;;2004:4:18;;;;-1:-1:-1;2004:12:18;;-1:-1:-1;6921:18:19;;2004:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2076:4:18;;:13;;-1:-1:-1;;;2076:13:18;;:4;:13;;;6948:25:19;2035:17:18;;-1:-1:-1;2035:17:18;;-1:-1:-1;;;;;;2076:4:18;;;;:10;;6921:18:19;;2076:13:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2030:59;;;;;;2099:34;2108:9;2127:4;2099:8;:34::i;:::-;2143:37;2152:10;2164:15;2143:8;:37::i;:::-;2227:4;;:26;;-1:-1:-1;;;2227:26:18;;:4;:26;;;3111:51:19;2195:25:18;;-1:-1:-1;;;;;2227:4:18;;:14;;3084:18:19;;2227:26:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2191:62;;;;2263:34;2272:17;2291:5;2263:8;:34::i;:::-;2316:4;;:35;;-1:-1:-1;;;2316:35:18;;2307:48;;-1:-1:-1;;;;;2316:4:18;;:20;;:35;;:4;;;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2353:1;2307:8;:48::i;:::-;2394:4;;:29;;-1:-1:-1;;;2394:29:18;;2417:4;2394:29;;;3111:51:19;-1:-1:-1;;;;;2394:4:18;;;;:14;;3084:18:19;;2394:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2366:57;-1:-1:-1;2433:34:18;;-1:-1:-1;2366:57:18;;-1:-1:-1;2461:5:18;;-1:-1:-1;2433:8:18;:34::i;:::-;1706:769;;;;;1676:799::o;1417:96:2:-;1461:22;;-1:-1:-1;;;1461:22:2;;-1:-1:-1;;;;;;;;;;;251:64:1;1461:7:2;;:22;;1469:3;;-1:-1:-1;;;1474:8:2;1461:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1493:13:2;;-1:-1:-1;;;1493:13:2;;-1:-1:-1;;;;;3129:32:19;;1493:13:2;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;1493:8:2;;-1:-1:-1;3084:18:19;;1493:13:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:120;1691:22;;-1:-1:-1;;;1691:22:2;;-1:-1:-1;;;;;;;;;;;251:64:1;1691:7:2;;:22;;1699:3;;-1:-1:-1;;;1704:8:2;1691:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1723:21:2;;-1:-1:-1;;;1723:21:2;;-1:-1:-1;;;;;9611:15:19;;;1723:21:2;;;9593:34:19;9663:15;;9643:18;;;9636:43;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;1723:8:2;;-1:-1:-1;9528:18:19;;1723:21:2;9381:304:19;5142:455:2;5302:16;;-1:-1:-1;;;5302:16:2;;5233:12;;;;-1:-1:-1;;;;;;;;;;;251:64:1;5302:10:2;;:16;;5313:4;;5302:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5302:16:2;;;;;;;;;;;;:::i;:::-;5320:4;5285:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5261:64;;5446:8;5440:15;5433:4;5423:8;5419:19;5416:1;5409:47;5401:55;-1:-1:-1;;;;;;5497:18:2;;5476:114;;;;-1:-1:-1;;;5476:114:2;;11654:2:19;5476:114:2;;;11636:21:19;11693:2;11673:18;;;11666:30;11732:34;11712:18;;;11705:62;-1:-1:-1;;;11783:18:19;;;11776:47;11840:19;;5476:114:2;;;;;;;;;5251:346;5142:455;;;;:::o;1269:85::-;-1:-1:-1;;;;;;;;;;;1316:7:2;1324:22;1342:4;1324:15;:22;:::i;:::-;1316:31;;;;;;;;;;;;;6948:25:19;;6936:2;6921:18;;6773:206;2441:140:2;2520:18;;-1:-1:-1;;;2520:18:2;;-1:-1:-1;;;;;;;;;;;251:64:1;2520:7:2;;:18;;2528:3;;2533:4;;2520:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2548:26:2;;-1:-1:-1;;;2548:26:2;;-1:-1:-1;;;;;9611:15:19;;;2548:26:2;;;9593:34:19;9663:15;;9643:18;;;9636:43;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2548:13:2;;-1:-1:-1;9528:18:19;;2548:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:140;;;:::o;3370:107::-;3442:28;3447:5;3454:2;3458:4;3464:5;3442:4;:28::i;:::-;3370:107;;;:::o;1958:106::-;2007:22;;-1:-1:-1;;;2007:22:2;;-1:-1:-1;;;;;;;;;;;251:64:1;2007:7:2;;:22;;2015:3;;-1:-1:-1;;;2020:8:2;2007:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:18:2;;-1:-1:-1;;;2039:18:2;;-1:-1:-1;;;;;3129:32:19;;2039:18:2;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2039:13:2;;-1:-1:-1;3084:18:19;;2039::2;2965:203:19;1002:229:18;1042:4;;:18;;-1:-1:-1;;;1042:18:18;;1055:4;1042:18;;;6948:25:19;-1:-1:-1;;;;;1042:4:18;;;;:12;;6921:18:19;;1042::18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:4:18;;:29;;-1:-1:-1;;;1122:29:18;;1145:4;1122:29;;;3111:51:19;1072:15:18;;-1:-1:-1;1072:15:18;;-1:-1:-1;;;;;;1122:4:18;;;;:14;;3084:18:19;;1122:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1070:81;;;;;;1161:23;1170:7;1179:4;1161:8;:23::i;:::-;1194:30;1203:17;1222:1;1194:8;:30::i;:::-;1032:199;;1002:229::o;3483:915:2:-;3637:38;;;-1:-1:-1;;;;;3129:32:19;;;3637:38:2;;;;3111:51:19;;;;3637:38:2;;;;;;;;;;3084:18:19;;;;3637:38:2;;;;;;;-1:-1:-1;;;;;3637:38:2;-1:-1:-1;;;3637:38:2;;;3626:50;;3602:20;;3626:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3599:77;;;3686:15;3715:7;3704:30;;;;;;;;;;;;:::i;:::-;3686:48;-1:-1:-1;3771:123:2;3889:4;3771:90;3858:2;3771:64;-1:-1:-1;;;3771:35:2;:8;3800:5;3771:28;:35::i;:::-;:52;19603:9;;;:16;;-1:-1:-1;;19603:16:2;;;;;;;;;;;;:9;19504:143;3771:64;:86;19919:10;;;:47;;;;;;;-1:-1:-1;19919:47:2;;;;;;;-1:-1:-1;;;;;19943:21:2;;;;19919:47;;;:10;19815:179;3771:90;:117;;:123::i;:::-;3939:6;3936:456;;;4001:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4001:34:2;-1:-1:-1;;;4001:34:2;;;3990:46;;3963:23;;-1:-1:-1;;;;;3990:10:2;;;:46;;4001:34;3990:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3960:76;;;4050:14;4078:10;4067:33;;;;;;;;;;;;:::i;:::-;4050:50;;4124:7;4117:4;:14;4114:143;;;4162:14;4172:4;4162:7;:14;:::i;:::-;4151:26;;;;:::i;:::-;;;4114:143;;;4227:14;4234:7;4227:4;:14;:::i;:::-;4216:26;;;;:::i;:::-;;;4114:143;4270:111;4374:6;4270:72;-1:-1:-1;;;4270:39:2;:8;4303:5;4270:32;:39::i;:111::-;3946:446;;3558:840;;3483:915;;;;:::o;5603:406::-;5727:16;;-1:-1:-1;;;5727:16:2;;5675:12;;;;-1:-1:-1;;;;;;;;;;;251:64:1;5727:10:2;;:16;;5738:4;;5727:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5727:16:2;;;;;;;;;;;;:::i;:::-;5703:40;;5864:8;5858:15;5851:4;5841:8;5837:19;5834:1;5827:47;5819:55;-1:-1:-1;;;;;;5915:18:2;;5894:108;;;;-1:-1:-1;;;5894:108:2;;13136:2:19;5894:108:2;;;13118:21:19;13175:2;13155:18;;;13148:30;13214:34;13194:18;;;13187:62;-1:-1:-1;;;13265:18:19;;;13258:41;13316:19;;5894:108:2;12934:407:19;5894:108:2;5693:316;5603:406;;;:::o;1757:130::-;1831:18;;-1:-1:-1;;;1831:18:2;;-1:-1:-1;;;;;;;;;;;251:64:1;1831:7:2;;:18;;1839:3;;1844:4;;1831:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1859:21:2;;-1:-1:-1;;;1859:21:2;;-1:-1:-1;;;;;9611:15:19;;;1859:21:2;;;9593:34:19;9663:15;;9643:18;;;9636:43;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;1859:8:2;;-1:-1:-1;9528:18:19;;1859:21:2;9381:304:19;1237:433:18;1277:25;;-1:-1:-1;;;1277:25:18;;1299:1;1277:25;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;1277:13:18;;3084:18:19;;1277:25:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1312:4:18;;:19;;-1:-1:-1;;;1312:19:18;;1325:5;1312:19;;;6948:25:19;-1:-1:-1;;;;;1312:4:18;;;;-1:-1:-1;1312:12:18;;-1:-1:-1;6921:18:19;;1312:19:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1477:4:18;;:13;;-1:-1:-1;;;1477:13:18;;:4;:13;;;6948:25:19;1355:17:18;;-1:-1:-1;1355:17:18;;-1:-1:-1;1355:17:18;;;;-1:-1:-1;;;;;1477:4:18;;;;:10;;6921:18:19;;1477:13:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1341:149;;;;;;;;1500:31;1509:9;1528:1;1500:8;:31::i;:::-;1541:24;1550:7;1559:5;1541:8;:24::i;:::-;1575:31;1584:9;1603:1;1575:8;:31::i;:::-;1616:23;1625:10;1637:1;1616:8;:23::i;:::-;1649:14;;;-1:-1:-1;;;1649:14:18;;;;-1:-1:-1;;;;;;;;;;;251:64:1;1649:12:18;;:14;;;;;275:37:1;;1649:14:18;;;;;;;275:37:1;251:64;1649:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;1180:83:2;-1:-1:-1;;;;;;;;;;;1225:7:2;1233:22;1251:4;1233:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3165:81:2:-;3222:17;;-1:-1:-1;;;3222:17:2;;-1:-1:-1;;;;;;;;;;;251:64:1;3222:7:2;;:17;;3230:2;;3234:4;;3222:17;;;:::i;2305:130::-;2370:22;;-1:-1:-1;;;2370:22:2;;-1:-1:-1;;;;;;;;;;;251:64:1;2370:7:2;;:22;;2378:3;;-1:-1:-1;;;2383:8:2;2370:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2402:26:2;;-1:-1:-1;;;2402:26:2;;-1:-1:-1;;;;;9611:15:19;;;2402:26:2;;;9593:34:19;9663:15;;9643:18;;;9636:43;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2402:13:2;;-1:-1:-1;9528:18:19;;2402:26:2;9381:304:19;867:129:18;917:4;;:21;;;-1:-1:-1;;;917:21:18;;;;908:37;;-1:-1:-1;;;;;917:4:18;;:19;;:21;;;;;;;;;;;;;;:4;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;940:4;908:8;:37::i;:::-;964:4;;:20;;;-1:-1:-1;;;964:20:18;;;;955:34;;-1:-1:-1;;;;;964:4:18;;:18;;:20;;;;;;;;;;;;;;:4;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;986:2;955:8;:34::i;:::-;867:129::o;3065:307::-;3106:4;;:21;;-1:-1:-1;;;3106:21:18;;3119:7;3106:21;;;6948:25:19;-1:-1:-1;;;;;3106:4:18;;;;:12;;6921:18:19;;3106:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3138:20:18;;-1:-1:-1;;;3138:20:18;;3155:1;3138:20;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;3138:8:18;;-1:-1:-1;3084:18:19;;3138:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3168:4:18;;:19;;-1:-1:-1;;;3168:19:18;;3181:5;3168:19;;;6948:25:19;-1:-1:-1;;;;;3168:4:18;;;;-1:-1:-1;3168:12:18;;-1:-1:-1;6921:18:19;;3168:19:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3198:4:18;;:15;;-1:-1:-1;;;3198:15:18;;:4;:15;;;6948:25:19;-1:-1:-1;;;;;3198:4:18;;;;-1:-1:-1;3198:12:18;;-1:-1:-1;6921:18:19;;3198:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3223:4:18;;:21;;-1:-1:-1;;;3223:21:18;;3237:6;3223:21;;;6948:25:19;-1:-1:-1;;;;;3223:4:18;;;;-1:-1:-1;3223:13:18;;-1:-1:-1;6921:18:19;;3223:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3301:4:18;;:29;;-1:-1:-1;;;3301:29:18;;3324:4;3301:29;;;3111:51:19;3256:12:18;;-1:-1:-1;3256:12:18;;-1:-1:-1;;;;;;3301:4:18;;;;:14;;3084:18:19;;3301:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3254:76;;;;;;3340:25;3349:7;3358:6;3340:8;:25::i;2733:341:2:-;2809:125;;;;;14514:2:19;14496:21;;;14553:1;14533:18;;;14526:29;-1:-1:-1;;;14586:2:19;14571:18;;14564:37;14639:3;14632:4;14617:20;;14610:33;;;14680:2;14659:19;;;14652:31;14720:34;14714:3;14699:19;;14692:63;14792:34;14786:3;14771:19;;14764:63;14864:32;14858:3;14843:19;;14836:61;14929:3;14914:19;;14211:728;2809:125:2;;;;;;;;2944:123;3062:4;2944:90;3031:2;2944:64;-1:-1:-1;;;2944:35:2;:8;2973:5;2944:28;:35::i;1519:106::-;1577:18;;-1:-1:-1;;;1577:18:2;;-1:-1:-1;;;;;;;;;;;251:64:1;1577:7:2;;:18;;1585:3;;1590:4;;1577:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1605:13:2;;-1:-1:-1;;;1605:13:2;;-1:-1:-1;;;;;3129:32:19;;1605:13:2;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;1605:8:2;;-1:-1:-1;3084:18:19;;1605:13:2;2965:203:19;2481:578:18;2537:4;;:21;;-1:-1:-1;;;2537:21:18;;2550:7;2537:21;;;6948:25:19;-1:-1:-1;;;;;2537:4:18;;;;:12;;6921:18:19;;2537:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2568:20:18;;-1:-1:-1;;;2568:20:18;;2585:1;2568:20;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2568:8:18;;-1:-1:-1;3084:18:19;;2568:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2598:4:18;;:19;;-1:-1:-1;;;2598:19:18;;2611:5;2598:19;;;6948:25:19;-1:-1:-1;;;;;2598:4:18;;;;-1:-1:-1;2598:12:18;;-1:-1:-1;6921:18:19;;2598:19:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2627:4:18;;:15;;-1:-1:-1;;;2627:15:18;;:4;:15;;;6948:25:19;-1:-1:-1;;;;;2627:4:18;;;;-1:-1:-1;2627:12:18;;-1:-1:-1;6921:18:19;;2627:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;251:64:1;-1:-1:-1;2661:7:18;;-1:-1:-1;2669:35:18;;-1:-1:-1;2669:15:18;2687:17;2669:35;:::i;:::-;2661:44;;;;;;;;;;;;;6948:25:19;;6936:2;6921:18;;6773:206;2661:44:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2715:20:18;;-1:-1:-1;;;2715:20:18;;2732:1;2715:20;;;3111:51:19;-1:-1:-1;;;;;;;;;;;251:64:1;-1:-1:-1;2715:8:18;;-1:-1:-1;3084:18:19;;2715:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2745:4:18;;:20;;-1:-1:-1;;;2745:20:18;;:4;:20;;;15153:25:19;2759:5:18;15194:18:19;;;15187:34;-1:-1:-1;;;;;2745:4:18;;;;-1:-1:-1;2745:10:18;;-1:-1:-1;15126:18:19;;2745:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2785:4:18;;:35;;-1:-1:-1;;;2785:35:18;;2776:48;;-1:-1:-1;;;;;;2785:4:18;;;;-1:-1:-1;2785:20:18;;:35;;:4;;;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2822:1;2776:8;:48::i;:::-;2870:4;;:26;;-1:-1:-1;;;2870:26:18;;:4;:26;;;3111:51:19;2838:25:18;;-1:-1:-1;;;;;2870:4:18;;:14;;3084:18:19;;2870:26:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2834:62;;;;2906:30;2915:17;2934:1;2906:8;:30::i;:::-;2983:4;;:29;;-1:-1:-1;;;2983:29:18;;3006:4;2983:29;;;3111:51:19;2953:25:18;;-1:-1:-1;;;;;2983:4:18;;:14;;3084:18:19;;2983:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2947:65;;;;;3022:30;3031:17;3050:1;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;15434:2:19;15416:21;;;15473:2;15453:18;;;15446:30;15512:34;15507:2;15492:18;;15485:62;-1:-1:-1;;;15578:2:19;15563:18;;15556:32;15620:3;15605:19;;15232:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;16871:2:19;16853:21;;;16910:2;16890:18;;;16883:30;16949:34;16944:2;16929:18;;16922:62;-1:-1:-1;;;17015:2:19;17000:18;;16993:35;17060:3;17045:19;;16669:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;19342:156:2:-;19448:12;;;:22;;-1:-1:-1;;;;;;19448:22:2;-1:-1:-1;;;;;19448:22:2;;;;;;;;;;:12;19342:156::o;20626:120::-;20706:33;20720:4;20734:3;20706:13;:33::i;2410:424:0:-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:0;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;20980:1089:2:-;21096:12;;;;21132:9;;;;21173:11;;;;21217:10;;;21194:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21096:12:2;;;;21132:9;;;;;;21082:11;;21194:33;;21217:10;;21194:33;;21217:10;21194:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21238:17;21275:4;21281:12;21289:3;21281:7;:12::i;:::-;21258:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21258:36:2;;;;;;;;;-1:-1:-1;;;;;21309:15:2;;;;;;:10;;;21258:36;21309:15;;;;;;-1:-1:-1;;;;;;21309:21:2;;;;;;;;;21258:36;;-1:-1:-1;21309:21:2;;:15;;21341:34;;21358:3;;21363:11;;21341:34;;:::i;:::-;;;;-1:-1:-1;;21341:34:2;;;;;;;;;21331:45;;21341:34;21331:45;;;;21309:68;;;;;;;;;;-1:-1:-1;21309:68:2;;;;21304:110;;21393:10;21398:4;21393;:10::i;:::-;;21304:110;-1:-1:-1;;;;;21446:15:2;;21423:12;21446:15;;;;;;;;;;;-1:-1:-1;;;;;;21446:21:2;;;;;;;;;21478:34;;21446:21;;21423:12;;21478:34;;21495:3;;21500:11;;21478:34;;:::i;:::-;;;;;;;;;;;;;21468:45;;;;;;21446:68;;;;;;;;;;;;21438:77;;21423:92;;21526:12;21565:17;21586:3;-1:-1:-1;;;;;21586:14:2;21601:4;21586:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21562:44:2;-1:-1:-1;21627:36:2;;-1:-1:-1;21562:44:2;21648:14;21651:11;21648:2;:14;:::i;:::-;21627;:36::i;:::-;21698:28;;-1:-1:-1;;;21698:28:2;;21620:43;;-1:-1:-1;21683:12:2;;-1:-1:-1;;;;;;;;;;;;21698:17:2;;;:28;;21716:3;;21721:4;;21698:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21683:43;;21749:4;21741;:12;21737:172;;21769:129;;-1:-1:-1;;;21769:129:2;;;;;;;:::i;:::-;21918:34;;-1:-1:-1;;;21918:34:2;;-1:-1:-1;;;;;;;;;;;21918:18:2;;;:34;;21937:3;;21942:4;;21948:3;;21918:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21969:12:2;;;21962:19;;-1:-1:-1;;;;;;21962:19:2;;;-1:-1:-1;21998:9:2;;;21991:16;;-1:-1:-1;;21991:16:2;;;22017:17;-1:-1:-1;22024:10:2;;21969:12;22017:17;:::i;:::-;22051:4;:11;;22044:18;;;21072:997;;;;;;;;20980:1089;;:::o;23413:397::-;23472:12;23500:19;23532:1;:8;23543:2;23532:13;;;;:::i;:::-;23522:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23522:24:2;;23500:46;;23561:9;23556:224;23580:1;:8;23576:1;:12;23556:224;;;23609:9;23621:1;23623;23621:4;;;;;;;;:::i;:::-;;;;;;;23609:16;;23754:1;23748;23744:2;23740:10;23736:2;23732:19;23724:6;23720:32;23713:43;23695:75;23590:3;;;;;:::i;:::-;;;;23556:224;;16122:3214;16246:12;;;;16282:9;;;;16323:11;;;;16367:10;;;16344:33;;;;;;;;;;;;;;;;;;;16209:7;;-1:-1:-1;;;;;16246:12:2;;16282:9;;;16323:11;16209:7;;16344:33;;16367:10;;16344:33;;;16367:10;16344:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16428:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16428:21:2;;;;;;;;;16460:34;;16344:33;;-1:-1:-1;16428:21:2;:15;;-1:-1:-1;16460:34:2;;-1:-1:-1;16344:33:2;;16482:11;;16460:34;;:::i;:::-;;;;-1:-1:-1;;16460:34:2;;;;;;;;;16450:45;;16460:34;16450:45;;;;16428:68;;;;;;;;;;-1:-1:-1;16428:68:2;;;;16424:174;;;-1:-1:-1;;;;;16519:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16519:21:2;;;;;;;;;16551:34;;16519:21;;:10;16551:34;;16568:3;;16573:11;;16551:34;;:::i;:::-;;;;;;;;;;;;;16541:45;;;;;;16519:68;;;;;;;;;;;;16512:75;;;;;;16122:3214;;;:::o;16424:174::-;16607:17;16644:4;16650:12;16658:3;16650:7;:12::i;:::-;16627:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16607:56;;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;16673:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16704:12;16743:17;16764:3;-1:-1:-1;;;;;16764:14:2;16779:4;16764:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16740:44:2;-1:-1:-1;16805:36:2;;-1:-1:-1;16740:44:2;16826:14;16829:11;16826:2;:14;:::i;16805:36::-;16891:35;;-1:-1:-1;;;16891:35:2;;-1:-1:-1;;;;;3129:32:19;;16891:35:2;;;3111:51:19;16798:43:2;;-1:-1:-1;16863:22:2;;-1:-1:-1;;;;;;;;;;;;16891:21:2;;;3084:18:19;;16891:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16891:35:2;;;;;;;;;;;;:::i;:::-;16862:64;;;16940:5;:12;16956:1;16940:17;16936:2058;;16973:12;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;16988:17:2;;17006:3;17011:5;17017:1;17011:8;;;;;;;;:::i;:::-;;;;;;;16988:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16973:47;-1:-1:-1;16973:47:2;17034:106;;17081:44;17102:3;17115:5;17121:1;17115:8;;;;;;;;:::i;:::-;;;;;;;17107:17;;17081:44;;;;;;;:::i;:::-;;;;;;;;17034:106;17165:4;17157;:12;17153:180;;17189:129;;-1:-1:-1;;;17189:129:2;;;;;;;:::i;:::-;17351:86;17361:3;17366:4;17399:3;17404:11;17382:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17372:45;;;;;;17427:5;17433:1;17427:8;;;;;;;;:::i;:::-;;;;;;;17419:17;;17351:86;;;;;;;;;:::i;:::-;;;;;;;;17530:5;17536:1;17530:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17451:15:2;;17522:17;17451:15;;;;;;;;;;-1:-1:-1;;;;;;17451:21:2;;;;;;;;;17483:34;;17530:8;;17451:21;;17483:34;;17500:3;;17505:11;;17483:34;;:::i;:::-;;;;-1:-1:-1;;17483:34:2;;;;;;;;;17473:45;;17483:34;17473:45;;;;17451:68;;;;;;;;;;;;-1:-1:-1;17451:68:2;;;:88;;;;-1:-1:-1;;;;;17553:15:2;;;;17624:4;17553:10;;;:15;;;;;-1:-1:-1;;;;;;17553:21:2;;;;;;;;;17585:34;;17624:4;;-1:-1:-1;17585:34:2;;17602:3;;17607:11;;17585:34;;:::i;:::-;;;;;;;-1:-1:-1;;17585:34:2;;;;;;17575:45;;17585:34;17575:45;;;;17553:68;;;;;;;;;;-1:-1:-1;17553:68:2;:75;;-1:-1:-1;;17553:75:2;;;;;;;;;;-1:-1:-1;16936:2058:2;;;17664:1;17649:5;:12;:16;17645:1349;;;17686:9;17681:1190;17705:5;:12;17701:1;:16;17681:1190;;;17742:12;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;17757:17:2;;17775:3;17780:5;17786:1;17780:8;;;;;;;;:::i;:::-;;;;;;;17757:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17742:47;-1:-1:-1;17742:47:2;17807:114;;17858:44;17879:3;17892:5;17898:1;17892:8;;;;;;;;:::i;:::-;;;;;;;17884:17;;17858:44;;;;;;;:::i;:::-;;;;;;;;17807:114;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;17963:18:2;;17982:3;17987:5;17993:1;17987:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17963:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18034:12;18064:17;18139:3;-1:-1:-1;;;;;18139:14:2;18154:4;18139:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18121:38:2;;-1:-1:-1;18121:38:2;-1:-1:-1;18188:36:2;18121:38;18209:14;18212:11;18209:2;:14;:::i;18188:36::-;18181:43;;18265:7;:37;;;;;-1:-1:-1;;;18276:4:2;:26;18265:37;18261:539;;;18400:86;18410:3;18415:4;18448:3;18453:11;18431:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18421:45;;;;;;18476:5;18482:1;18476:8;;;;;;;;:::i;:::-;;;;;;;18468:17;;18400:86;;;;;;;;;:::i;:::-;;;;;;;;18587:5;18593:1;18587:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18508:15:2;;18579:17;18508:15;;;;;;;;;;-1:-1:-1;;;;;;18508:21:2;;;;;;;;;18540:34;;18587:8;;18508:21;;18540:34;;18557:3;;18562:11;;18540:34;;:::i;:::-;;;;;;;;;;;;;18530:45;;;;;;18508:68;;;;;;;;;;;:88;;;;18689:4;18618;:10;;:15;18629:3;-1:-1:-1;;;;;18618:15:2;-1:-1:-1;;;;;18618:15:2;;;;;;;;;;;;:21;18634:4;-1:-1:-1;;;;;18618:21:2;;-1:-1:-1;;;;;18618:21:2;;;;;;;;;;;;;:68;18667:3;18672:11;18650:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18640:45;;;;;;18618:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;18715:18:2;;18734:3;18739:5;18745:1;18739:8;;;;;;;;:::i;:::-;;;;;;;18749:4;18715:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18776:5;;;;;18261:539;-1:-1:-1;;;;;;;;;;;15396:37:2;;-1:-1:-1;;;;;18817:18:2;;18836:3;18841:5;18847:1;18841:8;;;;;;;;:::i;:::-;;;;;;;18851:4;18817:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17724:1147;;;17719:3;;;;;:::i;:::-;;;;17681:1190;;;;17645:1349;;;18901:82;;;-1:-1:-1;;;18901:82:2;;21975:2:19;18901:82:2;;;21957:21:19;21994:18;;;21987:30;;;;22053:34;22033:18;;;22026:62;22124:34;22104:18;;;22097:62;22176:19;;18901:82:2;21773:428:19;18901:82:2;-1:-1:-1;;;;;19012:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19012:21:2;;;;;;;;;19044:34;;19012:21;;:15;19044:34;;19061:3;;19066:11;;19044:34;;:::i;:::-;;;;-1:-1:-1;;19044:34:2;;;;;;;;;19034:45;;19044:34;19034:45;;;;19012:68;;;;;;;;;;-1:-1:-1;19012:68:2;;;;19004:128;;;;-1:-1:-1;;;19004:128:2;;22408:2:19;19004:128:2;;;22390:21:19;22447:2;22427:18;;;22420:30;22486:34;22466:18;;;22459:62;-1:-1:-1;;;22537:18:19;;;22530:45;22592:19;;19004:128:2;22206:411:19;19004:128:2;19150:12;;;19143:19;;-1:-1:-1;;;;;;19143:19:2;;;19179:9;;;19172:16;;-1:-1:-1;;19172:16:2;;;19198:17;-1:-1:-1;19205:10:2;;19150:12;19198:17;:::i;:::-;19225:18;19232:11;;;19225:18;;;-1:-1:-1;;;;;19261:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;19261:21:2;;;;;;;;;19293:34;;19261:21;;19225:18;19293:34;;19310:3;;19315:11;;19293:34;;:::i;:::-;;;;;;;;;;;;;19283:45;;;;;;19261:68;;;;;;;;;;;;19254:75;;;;;;;;;16122:3214;;;:::o;23110:297::-;23184:7;23203:11;23225;23250:2;23239:1;:8;:13;:29;;23260:1;:8;23239:29;;;23255:2;23239:29;23225:43;;23283:6;23278:103;23299:3;23295:1;:7;23278:103;;;23364:5;:1;23368;23364:5;:::i;:::-;23338:1;23340:10;23349:1;23340:6;:10;:::i;:::-;23338:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23338:13:2;23330:40;;23323:47;;;;;23304:3;;;;:::i;:::-;;;;23278:103;;;-1:-1:-1;23397:3:2;;23110:297;-1:-1:-1;;;;23110:297:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:19:-;-1:-1:-1;;;;;89:31:19;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:19:o;470:247::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;637:9;624:23;656:31;681:5;656:31;:::i;:::-;706:5;470:247;-1:-1:-1;;;470:247:19:o;722:388::-;790:6;798;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;906:9;893:23;925:31;950:5;925:31;:::i;:::-;975:5;-1:-1:-1;1032:2:19;1017:18;;1004:32;1045:33;1004:32;1045:33;:::i;:::-;1097:7;1087:17;;;722:388;;;;;:::o;1115:127::-;1176:10;1171:3;1167:20;1164:1;1157:31;1207:4;1204:1;1197:15;1231:4;1228:1;1221:15;1247:275;1318:2;1312:9;1383:2;1364:13;;-1:-1:-1;;1360:27:19;1348:40;;1418:18;1403:34;;1439:22;;;1400:62;1397:88;;;1465:18;;:::i;:::-;1501:2;1494:22;1247:275;;-1:-1:-1;1247:275:19:o;1527:187::-;1576:4;1609:18;1601:6;1598:30;1595:56;;;1631:18;;:::i;:::-;-1:-1:-1;1697:2:19;1676:15;-1:-1:-1;;1672:29:19;1703:4;1668:40;;1527:187::o;1719:338::-;1784:5;1813:53;1829:36;1858:6;1829:36;:::i;:::-;1813:53;:::i;:::-;1804:62;;1889:6;1882:5;1875:21;1929:3;1920:6;1915:3;1911:16;1908:25;1905:45;;;1946:1;1943;1936:12;1905:45;1995:6;1990:3;1983:4;1976:5;1972:16;1959:43;2049:1;2042:4;2033:6;2026:5;2022:18;2018:29;2011:40;1719:338;;;;;:::o;2062:222::-;2105:5;2158:3;2151:4;2143:6;2139:17;2135:27;2125:55;;2176:1;2173;2166:12;2125:55;2198:80;2274:3;2265:6;2252:20;2245:4;2237:6;2233:17;2198:80;:::i;2289:671::-;2376:6;2384;2437:2;2425:9;2416:7;2412:23;2408:32;2405:52;;;2453:1;2450;2443:12;2405:52;2493:9;2480:23;2522:18;2563:2;2555:6;2552:14;2549:34;;;2579:1;2576;2569:12;2549:34;2602:50;2644:7;2635:6;2624:9;2620:22;2602:50;:::i;:::-;2592:60;;2705:2;2694:9;2690:18;2677:32;2661:48;;2734:2;2724:8;2721:16;2718:36;;;2750:1;2747;2740:12;2718:36;-1:-1:-1;2773:24:19;;2828:4;2820:13;;2816:27;-1:-1:-1;2806:55:19;;2857:1;2854;2847:12;2806:55;2880:74;2946:7;2941:2;2928:16;2923:2;2919;2915:11;2880:74;:::i;:::-;2870:84;;;2289:671;;;;;:::o;3173:180::-;3232:6;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;-1:-1:-1;3324:23:19;;3173:180;-1:-1:-1;3173:180:19:o;3577:456::-;3654:6;3662;3670;3723:2;3711:9;3702:7;3698:23;3694:32;3691:52;;;3739:1;3736;3729:12;3691:52;3778:9;3765:23;3797:31;3822:5;3797:31;:::i;:::-;3847:5;-1:-1:-1;3904:2:19;3889:18;;3876:32;3917:33;3876:32;3917:33;:::i;:::-;3577:456;;3969:7;;-1:-1:-1;;;4023:2:19;4008:18;;;;3995:32;;3577:456::o;4038:118::-;4124:5;4117:13;4110:21;4103:5;4100:32;4090:60;;4146:1;4143;4136:12;4161:592;4244:6;4252;4260;4268;4321:3;4309:9;4300:7;4296:23;4292:33;4289:53;;;4338:1;4335;4328:12;4289:53;4377:9;4364:23;4396:31;4421:5;4396:31;:::i;:::-;4446:5;-1:-1:-1;4503:2:19;4488:18;;4475:32;4516:33;4475:32;4516:33;:::i;:::-;4568:7;-1:-1:-1;4622:2:19;4607:18;;4594:32;;-1:-1:-1;4678:2:19;4663:18;;4650:32;4691:30;4650:32;4691:30;:::i;:::-;4161:592;;;;-1:-1:-1;4161:592:19;;-1:-1:-1;;4161:592:19:o;4758:322::-;4827:6;4880:2;4868:9;4859:7;4855:23;4851:32;4848:52;;;4896:1;4893;4886:12;4848:52;4936:9;4923:23;4969:18;4961:6;4958:30;4955:50;;;5001:1;4998;4991:12;4955:50;5024;5066:7;5057:6;5046:9;5042:22;5024:50;:::i;:::-;5014:60;4758:322;-1:-1:-1;;;;4758:322:19:o;5434:497::-;5737:2;5726:9;5719:21;5700:4;5763:49;5808:2;5797:9;5793:18;5354:1;5342:14;;-1:-1:-1;;;5381:4:19;5372:14;;5365:30;5420:2;5411:12;;5277:152;5763:49;5860:9;5852:6;5848:22;5843:2;5832:9;5828:18;5821:50;5888:37;5918:6;5354:1;5342:14;;-1:-1:-1;;;5381:4:19;5372:14;;5365:30;5420:2;5411:12;;5277:152;5936:303;-1:-1:-1;;;;;6157:32:19;;;;6139:51;;6221:2;6206:18;;6199:34;6127:2;6112:18;;5936:303::o;6523:245::-;6590:6;6643:2;6631:9;6622:7;6618:23;6614:32;6611:52;;;6659:1;6656;6649:12;6611:52;6691:9;6685:16;6710:28;6732:5;6710:28;:::i;6984:368::-;7081:6;7089;7097;7105;7158:3;7146:9;7137:7;7133:23;7129:33;7126:53;;;7175:1;7172;7165:12;7126:53;-1:-1:-1;;7198:16:19;;7254:2;7239:18;;7233:25;7298:2;7283:18;;7277:25;7342:2;7327:18;;;7321:25;7198:16;;7233:25;;-1:-1:-1;7321:25:19;;-1:-1:-1;6984:368:19;-1:-1:-1;6984:368:19:o;7756:508::-;7853:6;7861;7869;7877;7930:3;7918:9;7909:7;7905:23;7901:33;7898:53;;;7947:1;7944;7937:12;7898:53;7979:9;7973:16;7998:31;8023:5;7998:31;:::i;:::-;8093:2;8078:18;;8072:25;8142:2;8127:18;;8121:25;8048:5;;-1:-1:-1;8072:25:19;-1:-1:-1;8155:33:19;8121:25;8155:33;:::i;:::-;8254:2;8239:18;;;;8233:25;7756:508;;;;-1:-1:-1;;;7756:508:19:o;8269:306::-;8357:6;8365;8373;8426:2;8414:9;8405:7;8401:23;8397:32;8394:52;;;8442:1;8439;8432:12;8394:52;8471:9;8465:16;8455:26;;8521:2;8510:9;8506:18;8500:25;8490:35;;8565:2;8554:9;8550:18;8544:25;8534:35;;8269:306;;;;;:::o;8867:184::-;8937:6;8990:2;8978:9;8969:7;8965:23;8961:32;8958:52;;;9006:1;9003;8996:12;8958:52;-1:-1:-1;9029:16:19;;8867:184;-1:-1:-1;8867:184:19:o;9690:258::-;9762:1;9772:113;9786:6;9783:1;9780:13;9772:113;;;9862:11;;;9856:18;9843:11;;;9836:39;9808:2;9801:10;9772:113;;;9903:6;9900:1;9897:13;9894:48;;;9938:1;9929:6;9924:3;9920:16;9913:27;9894:48;;9690:258;;;:::o;9953:383::-;10102:2;10091:9;10084:21;10065:4;10134:6;10128:13;10177:6;10172:2;10161:9;10157:18;10150:34;10193:66;10252:6;10247:2;10236:9;10232:18;10227:2;10219:6;10215:15;10193:66;:::i;:::-;10320:2;10299:15;-1:-1:-1;;10295:29:19;10280:45;;;;10327:2;10276:54;;9953:383;-1:-1:-1;;9953:383:19:o;10341:635::-;10420:6;10473:2;10461:9;10452:7;10448:23;10444:32;10441:52;;;10489:1;10486;10479:12;10441:52;10522:9;10516:16;10555:18;10547:6;10544:30;10541:50;;;10587:1;10584;10577:12;10541:50;10610:22;;10663:4;10655:13;;10651:27;-1:-1:-1;10641:55:19;;10692:1;10689;10682:12;10641:55;10721:2;10715:9;10746:49;10762:32;10791:2;10762:32;:::i;10746:49::-;10818:2;10811:5;10804:17;10858:7;10853:2;10848;10844;10840:11;10836:20;10833:33;10830:53;;;10879:1;10876;10869:12;10830:53;10892:54;10943:2;10938;10931:5;10927:14;10922:2;10918;10914:11;10892:54;:::i;:::-;10965:5;10341:635;-1:-1:-1;;;;;10341:635:19:o;10981:466::-;11156:3;11194:6;11188:13;11210:53;11256:6;11251:3;11244:4;11236:6;11232:17;11210:53;:::i;:::-;11326:13;;11285:16;;;;11348:57;11326:13;11285:16;11382:4;11370:17;;11348:57;:::i;:::-;11421:20;;10981:466;-1:-1:-1;;;;10981:466:19:o;11870:127::-;11931:10;11926:3;11922:20;11919:1;11912:31;11962:4;11959:1;11952:15;11986:4;11983:1;11976:15;12002:125;12042:4;12070:1;12067;12064:8;12061:34;;;12075:18;;:::i;:::-;-1:-1:-1;12112:9:19;;12002:125::o;12522:274::-;12651:3;12689:6;12683:13;12705:53;12751:6;12746:3;12739:4;12731:6;12727:17;12705:53;:::i;:::-;12774:16;;;;;12522:274;-1:-1:-1;;12522:274:19:o;12801:128::-;12841:3;12872:1;12868:6;12865:1;12862:13;12859:39;;;12878:18;;:::i;:::-;-1:-1:-1;12914:9:19;;12801:128::o;13625:371::-;-1:-1:-1;;;;;;13810:33:19;;13798:46;;13867:13;;13780:3;;13889:61;13867:13;13939:1;13930:11;;13923:4;13911:17;;13889:61;:::i;:::-;13970:16;;;;13988:1;13966:24;;13625:371;-1:-1:-1;;;13625:371:19:o;15799:348::-;16029:2;16018:9;16011:21;15992:4;16049:49;16094:2;16083:9;16079:18;15712:2;15700:15;;-1:-1:-1;;;15740:4:19;15731:14;;15724:36;15785:2;15776:12;;15635:159;16049:49;16041:57;;16134:6;16129:2;16118:9;16114:18;16107:34;15799:348;;;;:::o;16316:::-;16546:2;16535:9;16528:21;16509:4;16566:49;16611:2;16600:9;16596:18;16229:2;16217:15;;-1:-1:-1;;;16257:4:19;16248:14;;16241:36;16302:2;16293:12;;16152:159;17075:374;17305:2;17294:9;17287:21;17268:4;17325:49;17370:2;17359:9;17355:18;15712:2;15700:15;;-1:-1:-1;;;15740:4:19;15731:14;;15724:36;15785:2;15776:12;;15635:159;17325:49;-1:-1:-1;;;;;17410:32:19;;;;17405:2;17390:18;;;;17383:60;;;;-1:-1:-1;17317:57:19;17075:374::o;17454:::-;17684:2;17673:9;17666:21;17647:4;17704:49;17749:2;17738:9;17734:18;16229:2;16217:15;;-1:-1:-1;;;16257:4:19;16248:14;;16241:36;16302:2;16293:12;;16152:159;17833:345;-1:-1:-1;;;;;18053:32:19;;;;18035:51;;18117:2;18102:18;;18095:34;;;;18160:2;18145:18;;18138:34;18023:2;18008:18;;17833:345::o;18183:610::-;18429:13;;18372:3;;18403;;18482:4;18509:15;;;18372:3;18552:175;18566:6;18563:1;18560:13;18552:175;;;18629:13;;18615:28;;18665:14;;;;18702:15;;;;18588:1;18581:9;18552:175;;;-1:-1:-1;;18736:21:19;;;-1:-1:-1;18773:14:19;;;;;-1:-1:-1;;;18183:610:19:o;18798:168::-;18838:7;18904:1;18900;18896:6;18892:14;18889:1;18886:21;18881:1;18874:9;18867:17;18863:45;18860:71;;;18911:18;;:::i;:::-;-1:-1:-1;18951:9:19;;18798:168::o;19160:556::-;19362:2;19344:21;;;19401:3;19381:18;;;19374:31;19441:34;19436:2;19421:18;;19414:62;19512:34;19507:2;19492:18;;19485:62;19584:34;19578:3;19563:19;;19556:63;-1:-1:-1;;;19650:3:19;19635:19;;19628:46;19706:3;19691:19;;19160:556::o;19721:127::-;19782:10;19777:3;19773:20;19770:1;19763:31;19813:4;19810:1;19803:15;19837:4;19834:1;19827:15;19853:135;19892:3;19913:17;;;19910:43;;19933:18;;:::i;:::-;-1:-1:-1;19980:1:19;19969:13;;19853:135::o;19993:709::-;20058:5;20111:3;20104:4;20096:6;20092:17;20088:27;20078:55;;20129:1;20126;20119:12;20078:55;20158:6;20152:13;20184:4;20207:18;20203:2;20200:26;20197:52;;;20229:18;;:::i;:::-;20275:2;20272:1;20268:10;20298:28;20322:2;20318;20314:11;20298:28;:::i;:::-;20360:15;;;20430;;;20426:24;;;20391:12;;;;20462:15;;;20459:35;;;20490:1;20487;20480:12;20459:35;20526:2;20518:6;20514:15;20503:26;;20538:135;20554:6;20549:3;20546:15;20538:135;;;20620:10;;20608:23;;20571:12;;;;20651;;;;20538:135;;;20691:5;19993:709;-1:-1:-1;;;;;;;19993:709:19:o;20707:614::-;20836:6;20844;20897:2;20885:9;20876:7;20872:23;20868:32;20865:52;;;20913:1;20910;20903:12;20865:52;20946:9;20940:16;20975:18;21016:2;21008:6;21005:14;21002:34;;;21032:1;21029;21022:12;21002:34;21055:72;21119:7;21110:6;21099:9;21095:22;21055:72;:::i;:::-;21045:82;;21173:2;21162:9;21158:18;21152:25;21136:41;;21202:2;21192:8;21189:16;21186:36;;;21218:1;21215;21208:12;21186:36;;21241:74;21307:7;21296:8;21285:9;21281:24;21241:74;:::i;21326:442::-;-1:-1:-1;;;;;21573:32:19;;;;21555:51;;-1:-1:-1;;;;;;21642:33:19;;;;21637:2;21622:18;;21615:61;21707:2;21692:18;;21685:34;21750:2;21735:18;;21728:34;21542:3;21527:19;;21326:442::o",
    "linkReferences": {
      "src/helpers/Math.sol": {
        "Math": [
          {
            "start": 25653,
            "length": 20
          },
          {
            "start": 28128,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testApprove()": "1aeb10a6",
    "testDeposit()": "7f924c4e",
    "testInitPool()": "d37fadb7",
    "testRepay()": "f19db193",
    "testRequest()": "b8a05374",
    "testWithdraw()": "d509b16c",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/MediciPool.t.sol",
    "id": 24457,
    "exportedSymbols": {
      "Borrower": [
        22531
      ],
      "ERC20Mintable": [
        23847
      ],
      "MediciPool": [
        23770
      ],
      "MediciPoolTest": [
        24456
      ],
      "MediciToken": [
        23814
      ],
      "Test": [
        3137
      ],
      "Vm": [
        21572
      ],
      "console": [
        13028
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3342:18",
    "nodes": [
      {
        "id": 23968,
        "nodeType": "PragmaDirective",
        "src": "32:24:18",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 23970,
        "nodeType": "ImportDirective",
        "src": "58:42:18",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 4485,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23969,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3137,
              "src": "67:4:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23971,
        "nodeType": "ImportDirective",
        "src": "101:31:18",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 13029,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23972,
        "nodeType": "ImportDirective",
        "src": "133:26:18",
        "absolutePath": "lib/forge-std/src/vm.sol",
        "file": "forge-std/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 21573,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23974,
        "nodeType": "ImportDirective",
        "src": "161:65:18",
        "absolutePath": "src/helpers/ERC20Mintable.sol",
        "file": "../src/helpers/ERC20Mintable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 23848,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23973,
              "name": "ERC20Mintable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23847,
              "src": "170:13:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23976,
        "nodeType": "ImportDirective",
        "src": "227:49:18",
        "absolutePath": "src/MediciPool.sol",
        "file": "../src/MediciPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 23771,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23975,
              "name": "Borrower",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22531,
              "src": "236:8:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23978,
        "nodeType": "ImportDirective",
        "src": "277:53:18",
        "absolutePath": "src/MediciToken.sol",
        "file": "../src/MediciToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 23815,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23977,
              "name": "MediciToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23814,
              "src": "286:11:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23980,
        "nodeType": "ImportDirective",
        "src": "331:51:18",
        "absolutePath": "src/MediciPool.sol",
        "file": "../src/MediciPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24457,
        "sourceUnit": 23771,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23979,
              "name": "MediciPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23770,
              "src": "340:10:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24456,
        "nodeType": "ContractDefinition",
        "src": "384:2990:18",
        "nodes": [
          {
            "id": 23985,
            "nodeType": "VariableDeclaration",
            "src": "422:24:18",
            "constant": false,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "442:4:18",
            "scope": 24456,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MediciPool_$23770",
              "typeString": "contract MediciPool"
            },
            "typeName": {
              "id": 23984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23983,
                "name": "MediciPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23770,
                "src": "422:10:18"
              },
              "referencedDeclaration": 23770,
              "src": "422:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MediciPool_$23770",
                "typeString": "contract MediciPool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 23988,
            "nodeType": "VariableDeclaration",
            "src": "452:25:18",
            "constant": false,
            "mutability": "mutable",
            "name": "mici",
            "nameLocation": "473:4:18",
            "scope": 24456,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MediciToken_$23814",
              "typeString": "contract MediciToken"
            },
            "typeName": {
              "id": 23987,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23986,
                "name": "MediciToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23814,
                "src": "452:11:18"
              },
              "referencedDeclaration": 23814,
              "src": "452:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MediciToken_$23814",
                "typeString": "contract MediciToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 23991,
            "nodeType": "VariableDeclaration",
            "src": "483:27:18",
            "constant": false,
            "mutability": "mutable",
            "name": "usdc",
            "nameLocation": "506:4:18",
            "scope": 24456,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "id": 23990,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23989,
                "name": "ERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23847,
                "src": "483:13:18"
              },
              "referencedDeclaration": 23847,
              "src": "483:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                "typeString": "contract ERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24065,
            "nodeType": "FunctionDefinition",
            "src": "517:344:18",
            "body": {
              "id": 24064,
              "nodeType": "Block",
              "src": "541:320:18",
              "statements": [
                {
                  "expression": {
                    "id": 23999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23994,
                      "name": "mici",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23988,
                      "src": "551:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MediciToken_$23814",
                        "typeString": "contract MediciToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "558:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MediciToken_$23814_$",
                          "typeString": "function () returns (contract MediciToken)"
                        },
                        "typeName": {
                          "id": 23996,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23995,
                            "name": "MediciToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23814,
                            "src": "562:11:18"
                          },
                          "referencedDeclaration": 23814,
                          "src": "562:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MediciToken_$23814",
                            "typeString": "contract MediciToken"
                          }
                        }
                      },
                      "id": 23998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "558:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MediciToken_$23814",
                        "typeString": "contract MediciToken"
                      }
                    },
                    "src": "551:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MediciToken_$23814",
                      "typeString": "contract MediciToken"
                    }
                  },
                  "id": 24000,
                  "nodeType": "ExpressionStatement",
                  "src": "551:24:18"
                },
                {
                  "expression": {
                    "id": 24008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24001,
                      "name": "usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23991,
                      "src": "585:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "55534443",
                          "id": 24005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "610:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          "value": "USDC"
                        },
                        {
                          "hexValue": "55534443",
                          "id": 24006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "618:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          "value": "USDC"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          }
                        ],
                        "id": 24004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "592:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Mintable_$23847_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Mintable)"
                        },
                        "typeName": {
                          "id": 24003,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24002,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23847,
                            "src": "596:13:18"
                          },
                          "referencedDeclaration": 23847,
                          "src": "596:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                            "typeString": "contract ERC20Mintable"
                          }
                        }
                      },
                      "id": 24007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "592:33:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "585:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 24009,
                  "nodeType": "ExpressionStatement",
                  "src": "585:40:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24015,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "653:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "645:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "645:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "645:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 24017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "660:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24010,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23991,
                        "src": "635:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 24012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23846,
                      "src": "635:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24019,
                  "nodeType": "ExpressionStatement",
                  "src": "635:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "696:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "688:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "688:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 24027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "700:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24020,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23991,
                        "src": "678:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 24022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23846,
                      "src": "678:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24029,
                  "nodeType": "ExpressionStatement",
                  "src": "678:30:18"
                },
                {
                  "expression": {
                    "id": 24039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24030,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23985,
                      "src": "718:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MediciPool_$23770",
                        "typeString": "contract MediciPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24036,
                              "name": "mici",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23988,
                              "src": "748:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MediciToken_$23814",
                                "typeString": "contract MediciToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MediciToken_$23814",
                                "typeString": "contract MediciToken"
                              }
                            ],
                            "id": 24035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "740:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "740:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "740:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "725:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MediciPool_$23770_$",
                          "typeString": "function (address) returns (contract MediciPool)"
                        },
                        "typeName": {
                          "id": 24032,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24031,
                            "name": "MediciPool",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23770,
                            "src": "729:10:18"
                          },
                          "referencedDeclaration": 23770,
                          "src": "729:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MediciPool_$23770",
                            "typeString": "contract MediciPool"
                          }
                        }
                      },
                      "id": 24038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "725:29:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MediciPool_$23770",
                        "typeString": "contract MediciPool"
                      }
                    },
                    "src": "718:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MediciPool_$23770",
                      "typeString": "contract MediciPool"
                    }
                  },
                  "id": 24040,
                  "nodeType": "ExpressionStatement",
                  "src": "718:36:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24046,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23991,
                            "src": "792:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                              "typeString": "contract ERC20Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                              "typeString": "contract ERC20Mintable"
                            }
                          ],
                          "id": 24045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "784:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24044,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "784:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "784:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24041,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "764:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUSDCAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22714,
                      "src": "764:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24049,
                  "nodeType": "ExpressionStatement",
                  "src": "764:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24055,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23985,
                            "src": "829:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          ],
                          "id": 24054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "821:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24053,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "821:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "841:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24058,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "841:7:18",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24057,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "836:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "836:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "836:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24050,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23991,
                        "src": "808:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$23847",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 24052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21892,
                      "src": "808:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24063,
                  "nodeType": "ExpressionStatement",
                  "src": "808:46:18"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "526:5:18",
            "parameters": {
              "id": 23992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:18"
            },
            "returnParameters": {
              "id": 23993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24083,
            "nodeType": "FunctionDefinition",
            "src": "867:129:18",
            "body": {
              "id": 24082,
              "nodeType": "Block",
              "src": "898:98:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 24069,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23985,
                            "src": "917:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          },
                          "id": 24070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lendingRateAPR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22565,
                          "src": "917:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 24071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:21:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32653137",
                        "id": 24072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "940:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "2e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "id": 24068,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "908:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24074,
                  "nodeType": "ExpressionStatement",
                  "src": "908:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 24076,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23985,
                            "src": "964:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          },
                          "id": 24077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxTimePeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22589,
                          "src": "964:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 24078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "964:20:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 24079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "986:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 24075,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "955:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24081,
                  "nodeType": "ExpressionStatement",
                  "src": "955:34:18"
                }
              ]
            },
            "functionSelector": "d37fadb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitPool",
            "nameLocation": "876:12:18",
            "parameters": {
              "id": 24066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:2:18"
            },
            "returnParameters": {
              "id": 24067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24115,
            "nodeType": "FunctionDefinition",
            "src": "1002:229:18",
            "body": {
              "id": 24114,
              "nodeType": "Block",
              "src": "1032:199:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 24089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1055:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24086,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1042:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23038,
                      "src": "1042:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1042:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24091,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:18:18"
                },
                {
                  "assignments": [
                    24093,
                    null,
                    null,
                    24095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24093,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1080:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24114,
                      "src": "1072:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1072:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 24095,
                      "mutability": "mutable",
                      "name": "currentlyApproved",
                      "nameLocation": "1101:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24114,
                      "src": "1093:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1093:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24103,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24100,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1145:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1137:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1137:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1137:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24096,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1122:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approvers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "1122:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 24102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1070:81:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24105,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24093,
                        "src": "1170:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 24106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1179:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24104,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1161:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24108,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:23:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24110,
                        "name": "currentlyApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24095,
                        "src": "1203:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24109,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1194:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24113,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:30:18"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "1011:11:18",
            "parameters": {
              "id": 24084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:2:18"
            },
            "returnParameters": {
              "id": 24085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24178,
            "nodeType": "FunctionDefinition",
            "src": "1237:433:18",
            "body": {
              "id": 24177,
              "nodeType": "Block",
              "src": "1267:403:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1299:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1291:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1291:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24118,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1277:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4709,
                      "src": "1277:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24126,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:25:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 24130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24127,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1312:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "request",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23338,
                      "src": "1312:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24132,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:19:18"
                },
                {
                  "assignments": [
                    24134,
                    24136,
                    24138,
                    24140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24134,
                      "mutability": "mutable",
                      "name": "_borrower",
                      "nameLocation": "1363:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24177,
                      "src": "1355:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24133,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1355:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24136,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "1394:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24177,
                      "src": "1386:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1386:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24138,
                      "mutability": "mutable",
                      "name": "_approver",
                      "nameLocation": "1423:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24177,
                      "src": "1415:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1415:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24140,
                      "mutability": "mutable",
                      "name": "_startTime",
                      "nameLocation": "1454:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24177,
                      "src": "1446:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1446:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24145,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1488:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 24141,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1477:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "loans",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22583,
                      "src": "1477:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_address_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:149:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24147,
                        "name": "_borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24134,
                        "src": "1509:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1528:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1520:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1520:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24146,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "1500:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24153,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:31:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24155,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24136,
                        "src": "1550:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 24156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1559:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 24154,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1541:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24158,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:24:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24160,
                        "name": "_approver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24138,
                        "src": "1584:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1603:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1595:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1595:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1595:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "1575:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24166,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:31:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24168,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24140,
                        "src": "1625:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1637:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24167,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1616:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24171,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:23:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 24172,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1649:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4726,
                      "src": "1649:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 24175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:14:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24176,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:14:18"
                }
              ]
            },
            "functionSelector": "b8a05374",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRequest",
            "nameLocation": "1246:11:18",
            "parameters": {
              "id": 24116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:2:18"
            },
            "returnParameters": {
              "id": 24117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24297,
            "nodeType": "FunctionDefinition",
            "src": "1676:799:18",
            "body": {
              "id": 24296,
              "nodeType": "Block",
              "src": "1706:769:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030653138",
                        "id": 24184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24181,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1734:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23038,
                      "src": "1734:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24186,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:21:18"
                },
                {
                  "assignments": [
                    null,
                    null,
                    24188,
                    24190
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 24188,
                      "mutability": "mutable",
                      "name": "approvalLimit",
                      "nameLocation": "1778:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24296,
                      "src": "1770:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1770:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24190,
                      "mutability": "mutable",
                      "name": "currentlyApproved",
                      "nameLocation": "1801:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24296,
                      "src": "1793:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24198,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24195,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1845:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1837:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1837:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1837:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24191,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1822:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approvers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "1822:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 24197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1765:86:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24200,
                        "name": "approvalLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24188,
                        "src": "1870:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 24201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1885:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 24199,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1861:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24203,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:32:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24205,
                        "name": "currentlyApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24190,
                        "src": "1912:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24204,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1903:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24208,
                  "nodeType": "ExpressionStatement",
                  "src": "1903:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1961:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1953:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1953:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1944:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4704,
                      "src": "1944:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1944:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24217,
                  "nodeType": "ExpressionStatement",
                  "src": "1944:20:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 24221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24218,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "1974:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "request",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23338,
                      "src": "1974:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24223,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 24224,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2004:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23256,
                      "src": "2004:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24229,
                  "nodeType": "ExpressionStatement",
                  "src": "2004:15:18"
                },
                {
                  "assignments": [
                    null,
                    null,
                    24231,
                    24233
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 24231,
                      "mutability": "mutable",
                      "name": "_approver",
                      "nameLocation": "2043:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24296,
                      "src": "2035:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24233,
                      "mutability": "mutable",
                      "name": "_startTime",
                      "nameLocation": "2062:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24296,
                      "src": "2054:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2054:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24238,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2087:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 24234,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2076:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "loans",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22583,
                      "src": "2076:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_address_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2030:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24240,
                        "name": "_approver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24231,
                        "src": "2108:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24243,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2127:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2119:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2119:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2119:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24239,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "2099:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24246,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24248,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24233,
                        "src": "2152:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24249,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2164:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 24250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2164:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24247,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2143:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2143:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24252,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:37:18"
                },
                {
                  "assignments": [
                    null,
                    24254,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 24254,
                      "mutability": "mutable",
                      "name": "currentlyBorrowed",
                      "nameLocation": "2203:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24296,
                      "src": "2195:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2195:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 24262,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2250:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2242:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2242:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2242:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24255,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2227:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "borrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22578,
                      "src": "2227:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 24261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2227:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2191:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24264,
                        "name": "currentlyBorrowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24254,
                        "src": "2272:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 24265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2291:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 24263,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2263:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24267,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 24273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2345:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 24272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2337:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24271,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2337:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2337:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 24275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2349:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 24269,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23985,
                            "src": "2316:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          },
                          "id": 24270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBorrowerLoan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22940,
                          "src": "2316:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 24276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:35:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 24268,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2307:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2307:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24279,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:48:18"
                },
                {
                  "expression": {
                    "id": 24289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        null,
                        null,
                        {
                          "id": 24280,
                          "name": "currentlyApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24190,
                          "src": "2372:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 24281,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2366:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$__$__$_t_uint256_$",
                        "typeString": "tuple(,,,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24286,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2417:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                                "typeString": "contract MediciPoolTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                                "typeString": "contract MediciPoolTest"
                              }
                            ],
                            "id": 24285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2409:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24284,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2409:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2409:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 24282,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23985,
                          "src": "2394:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MediciPool_$23770",
                            "typeString": "contract MediciPool"
                          }
                        },
                        "id": 24283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approvers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22573,
                        "src": "2394:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 24288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2394:29:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "2366:57:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24290,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24292,
                        "name": "currentlyApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24190,
                        "src": "2442:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 24293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2461:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 24291,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2433:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24295,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:34:18"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "1685:11:18",
            "parameters": {
              "id": 24179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:18"
            },
            "returnParameters": {
              "id": 24180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1706:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24401,
            "nodeType": "FunctionDefinition",
            "src": "2481:578:18",
            "body": {
              "id": 24400,
              "nodeType": "Block",
              "src": "2509:550:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030653138",
                        "id": 24303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2550:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24300,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2537:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23038,
                      "src": "2537:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24305,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2585:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2577:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2577:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24306,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2568:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4704,
                      "src": "2568:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24314,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:20:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 24318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2611:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24315,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2598:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "request",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23338,
                      "src": "2598:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24320,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 24321,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2627:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23256,
                      "src": "2627:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2627:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24326,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24330,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2669:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 24331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2669:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1296000_by_1",
                            "typeString": "int_const 1296000"
                          },
                          "id": 24338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_21600_by_1",
                              "typeString": "int_const 21600"
                            },
                            "id": 24336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_360_by_1",
                                "typeString": "int_const 360"
                              },
                              "id": 24334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3135",
                                "id": 24332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2687:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "15"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 24333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2692:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "2687:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_360_by_1",
                                "typeString": "int_const 360"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 24335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2697:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "2687:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_21600_by_1",
                              "typeString": "int_const 21600"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 24337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2702:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "2687:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1296000_by_1",
                            "typeString": "int_const 1296000"
                          }
                        },
                        "src": "2669:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24327,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2661:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4498,
                      "src": "2661:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24341,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:44:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2732:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2724:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2724:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2724:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24342,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2715:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4704,
                      "src": "2715:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24350,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:20:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2756:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 24355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2759:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24351,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2745:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23455,
                      "src": "2745:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 24356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2745:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24357,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:20:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 24363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2814:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 24362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2806:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24361,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2806:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2806:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 24365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2818:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 24359,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23985,
                            "src": "2785:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPool_$23770",
                              "typeString": "contract MediciPool"
                            }
                          },
                          "id": 24360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBorrowerLoan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22940,
                          "src": "2785:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 24366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:35:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2822:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24358,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2776:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24369,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:48:18"
                },
                {
                  "assignments": [
                    null,
                    24371,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 24371,
                      "mutability": "mutable",
                      "name": "currentlyBorrowed",
                      "nameLocation": "2846:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24400,
                      "src": "2838:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2838:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 24379,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2893:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2885:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24374,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2885:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2885:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24372,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2870:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "borrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22578,
                      "src": "2870:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 24378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2834:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24381,
                        "name": "currentlyBorrowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24371,
                        "src": "2915:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24380,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2906:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24384,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:30:18"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    24386
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 24386,
                      "mutability": "mutable",
                      "name": "currentlyApproved",
                      "nameLocation": "2961:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24400,
                      "src": "2953:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2953:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24394,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24391,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3006:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2998:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2998:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2998:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24387,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "2983:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approvers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "2983:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 24393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2947:65:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24396,
                        "name": "currentlyApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24386,
                        "src": "3031:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3050:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24395,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3022:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3022:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24399,
                  "nodeType": "ExpressionStatement",
                  "src": "3022:30:18"
                }
              ]
            },
            "functionSelector": "f19db193",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRepay",
            "nameLocation": "2490:9:18",
            "parameters": {
              "id": 24298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:18"
            },
            "returnParameters": {
              "id": 24299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2509:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24455,
            "nodeType": "FunctionDefinition",
            "src": "3065:307:18",
            "body": {
              "id": 24454,
              "nodeType": "Block",
              "src": "3096:276:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030653138",
                        "id": 24407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3119:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24404,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "3106:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23038,
                      "src": "3106:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24409,
                  "nodeType": "ExpressionStatement",
                  "src": "3106:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 24415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3155:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 24414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3147:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24413,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3147:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3147:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24410,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3138:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4964",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4704,
                      "src": "3138:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3138:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24418,
                  "nodeType": "ExpressionStatement",
                  "src": "3138:20:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 24422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3181:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24419,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "3168:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "request",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23338,
                      "src": "3168:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24424,
                  "nodeType": "ExpressionStatement",
                  "src": "3168:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 24428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3211:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 24425,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "3198:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23256,
                      "src": "3198:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24430,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "393030653138",
                        "id": 24434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3237:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900000000000000000000_by_1",
                          "typeString": "int_const 900000000000000000000"
                        },
                        "value": "900e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_900000000000000000000_by_1",
                          "typeString": "int_const 900000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24431,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "3223:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23112,
                      "src": "3223:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24436,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:21:18"
                },
                {
                  "assignments": [
                    24438,
                    null,
                    24440,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24438,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3261:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24454,
                      "src": "3256:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24437,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3256:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 24440,
                      "mutability": "mutable",
                      "name": "approvalLimit",
                      "nameLocation": "3281:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24454,
                      "src": "3273:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3273:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 24448,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24445,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3324:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MediciPoolTest_$24456",
                              "typeString": "contract MediciPoolTest"
                            }
                          ],
                          "id": 24444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3316:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3316:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3316:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24441,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23985,
                        "src": "3301:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MediciPool_$23770",
                          "typeString": "contract MediciPool"
                        }
                      },
                      "id": 24442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approvers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "3301:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 24447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3254:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24450,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24438,
                        "src": "3349:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 24451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3358:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24449,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2461,
                        2486,
                        2499,
                        2515,
                        2557,
                        2599,
                        2641,
                        2678,
                        2715,
                        2752,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3340:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3340:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24453,
                  "nodeType": "ExpressionStatement",
                  "src": "3340:25:18"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "3074:12:18",
            "parameters": {
              "id": 24402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:2:18"
            },
            "returnParameters": {
              "id": 24403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3096:0:18"
            },
            "scope": 24456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23981,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3137,
              "src": "411:4:18"
            },
            "id": 23982,
            "nodeType": "InheritanceSpecifier",
            "src": "411:4:18"
          }
        ],
        "canonicalName": "MediciPoolTest",
        "contractDependencies": [
          23770,
          23814,
          23847
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24456,
          3137,
          1818,
          1786
        ],
        "name": "MediciPoolTest",
        "nameLocation": "393:14:18",
        "scope": 24457,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 18
}